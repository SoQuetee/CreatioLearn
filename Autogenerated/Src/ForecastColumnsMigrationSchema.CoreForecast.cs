namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastColumnsMigrationSchema

	/// <exclude/>
	public class ForecastColumnsMigrationSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastColumnsMigrationSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastColumnsMigrationSchema(ForecastColumnsMigrationSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("6ee08079-d32e-4c13-8060-f6c336735fc6");
			Name = "ForecastColumnsMigration";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,189,87,205,111,219,54,20,63,171,64,255,7,214,189,200,131,161,67,143,109,236,34,241,226,192,67,211,110,85,218,75,209,3,35,61,219,26,36,202,35,41,23,94,144,255,125,143,228,163,76,73,182,211,5,216,46,38,196,247,245,123,223,180,224,21,168,45,207,128,221,129,148,92,213,43,157,204,107,177,42,214,141,228,186,168,69,178,168,37,100,92,233,175,111,94,190,120,120,249,34,106,84,33,214,236,35,252,208,181,176,236,191,169,90,188,107,9,233,94,105,168,250,223,168,179,44,33,51,10,85,114,3,2,100,145,13,120,62,20,226,175,195,101,136,167,170,66,19,33,69,194,169,251,228,90,232,66,23,160,144,1,89,94,75,88,163,117,54,47,185,82,111,153,247,10,113,53,149,80,183,197,218,185,107,121,183,205,125,89,100,76,105,188,202,88,102,36,206,8,68,38,42,173,254,91,208,155,58,71,11,191,203,98,199,53,88,133,209,214,125,120,149,168,172,106,74,190,68,175,217,167,45,136,43,137,25,136,199,204,106,138,36,232,70,10,38,224,71,135,209,17,163,187,253,22,216,52,164,152,155,4,213,72,46,242,137,99,154,243,173,1,135,124,163,120,68,119,95,121,217,64,120,243,104,66,23,61,62,137,112,94,214,10,242,255,18,227,120,128,113,252,239,48,126,251,206,174,154,162,204,211,47,183,41,148,43,162,196,221,164,177,204,30,71,92,64,113,66,126,194,161,83,30,45,26,97,139,154,224,135,62,33,20,239,213,193,173,224,242,145,206,32,255,147,103,97,112,206,13,17,56,111,147,143,216,225,125,28,68,90,230,201,93,157,106,137,205,211,26,247,176,58,73,127,94,46,154,234,178,44,131,84,152,51,5,173,77,175,42,119,42,159,140,29,151,108,71,232,60,45,177,112,173,209,168,88,177,152,232,83,38,154,178,244,130,39,42,241,219,247,7,7,215,224,37,253,170,169,42,46,247,62,8,70,226,67,161,244,69,32,54,115,70,48,166,141,208,88,236,191,176,55,99,167,102,133,165,196,179,13,139,195,204,20,246,71,56,228,45,34,131,213,80,18,155,176,87,167,50,214,242,71,33,176,228,50,207,173,52,217,141,162,172,198,65,38,124,32,200,159,161,204,255,88,185,30,218,0,67,80,203,39,121,66,223,6,196,78,213,141,195,4,82,154,59,18,119,245,37,78,252,125,60,62,83,152,247,117,93,178,165,34,247,93,228,127,106,46,80,143,152,96,45,115,83,117,79,45,72,188,85,90,37,29,75,78,250,41,120,233,166,110,202,220,173,20,56,64,60,215,47,62,28,190,85,210,78,109,187,22,57,99,118,87,23,57,110,168,58,3,165,210,13,128,95,107,177,85,254,69,129,68,111,132,91,216,172,233,124,78,152,93,172,251,52,219,64,197,41,76,238,99,194,150,215,162,169,112,200,223,151,112,209,13,242,140,56,213,216,152,120,24,244,212,48,31,166,177,188,76,216,90,175,250,217,164,244,141,89,175,83,78,132,240,48,255,110,188,223,196,162,46,186,34,179,216,23,170,181,123,44,77,109,94,6,214,105,226,4,125,167,194,217,134,49,94,10,202,26,245,218,251,99,115,179,53,64,76,111,143,46,58,10,129,111,171,227,85,209,135,19,0,197,225,225,99,96,158,115,200,107,14,76,250,14,164,78,82,124,174,241,178,248,27,62,221,255,137,69,112,192,20,104,0,91,20,109,108,93,65,36,115,76,176,6,87,48,113,183,142,188,176,19,76,22,160,179,205,66,214,213,175,87,113,187,158,122,60,169,207,151,117,40,30,121,200,163,73,223,129,190,32,223,65,188,226,165,130,112,166,80,107,188,6,145,187,199,27,125,15,94,114,246,57,72,125,212,121,26,218,238,253,220,136,246,53,24,159,109,157,112,217,41,27,160,91,46,248,26,36,134,173,203,153,132,61,70,76,239,90,89,234,138,207,176,173,105,143,117,27,200,16,84,161,107,121,34,230,7,29,212,196,211,46,156,100,81,136,124,137,211,140,139,12,174,246,230,5,17,143,186,38,70,129,42,101,6,200,51,52,217,193,51,80,244,71,3,114,79,110,133,81,176,247,113,71,251,36,52,109,31,58,129,178,34,167,105,50,13,244,154,37,67,157,59,90,230,3,219,170,203,140,243,193,33,56,252,123,57,30,80,59,30,156,134,228,82,224,66,26,51,26,208,90,250,129,64,100,116,254,26,103,94,108,63,217,116,230,39,91,139,225,166,193,209,76,48,12,2,179,66,242,160,236,47,12,195,44,246,238,133,110,31,148,208,56,111,219,209,214,202,97,222,169,184,53,229,69,143,45,131,254,224,239,206,250,208,144,111,43,58,251,206,31,233,52,186,11,175,30,255,1,30,57,109,229,141,14,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("6ee08079-d32e-4c13-8060-f6c336735fc6"));
		}

		#endregion

	}

	#endregion

}

