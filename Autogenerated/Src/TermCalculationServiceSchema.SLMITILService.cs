namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: TermCalculationServiceSchema

	/// <exclude/>
	public class TermCalculationServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TermCalculationServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TermCalculationServiceSchema(TermCalculationServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("8a10a692-749d-4236-a578-c1816f7dfa6e");
			Name = "TermCalculationService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e9cdff4a-a92d-4d26-906f-df90167f5485");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,221,87,75,111,219,56,16,62,59,64,254,3,215,185,200,128,65,223,155,7,224,122,209,192,139,102,107,216,94,20,216,160,7,90,26,59,220,74,164,150,164,188,240,22,249,239,29,146,146,69,218,86,156,244,214,230,224,136,195,225,55,239,79,98,165,185,216,144,197,78,27,40,174,47,47,170,96,73,239,115,185,98,57,255,159,25,46,197,225,230,188,18,134,23,64,23,160,120,167,18,110,110,121,10,15,50,131,252,165,61,58,78,13,223,158,133,160,159,97,117,184,31,138,150,160,20,211,114,109,232,68,42,232,16,211,15,44,53,82,113,208,39,21,196,154,111,42,21,187,210,238,163,53,212,41,10,183,121,121,33,88,1,186,100,41,116,65,80,148,23,19,150,167,85,238,214,117,52,151,23,223,46,47,122,87,10,54,40,35,147,156,105,253,142,116,169,246,70,163,17,185,209,85,81,48,181,187,171,215,87,246,207,255,186,255,205,99,252,64,142,229,13,222,40,0,124,172,109,161,235,70,97,118,190,88,217,88,151,127,130,193,96,75,116,103,197,115,110,118,115,248,183,226,10,10,16,70,39,225,194,86,135,220,146,51,71,172,22,173,5,217,192,26,41,171,85,206,83,146,218,4,116,196,255,142,188,103,26,218,100,216,196,237,51,247,0,230,73,102,152,187,153,3,178,91,135,201,114,130,137,196,110,213,68,1,6,103,207,217,206,37,76,100,132,17,45,243,170,149,25,73,250,181,173,41,118,87,127,184,95,206,240,168,93,206,20,199,230,49,187,62,165,123,115,163,67,123,55,37,83,172,32,182,61,110,251,10,35,6,109,250,119,115,255,64,214,82,17,157,62,65,86,229,144,145,12,88,150,115,1,154,222,140,220,177,22,69,129,169,148,208,119,99,65,228,234,31,72,13,49,79,204,144,20,203,196,184,208,184,130,19,49,69,17,33,104,131,98,97,31,63,149,224,59,51,172,117,239,17,251,122,42,182,242,43,36,62,165,88,204,254,236,211,98,137,17,191,151,217,110,97,118,185,45,48,170,61,128,214,108,3,123,41,253,172,88,89,66,54,36,117,120,31,164,42,208,201,80,217,139,232,31,90,138,161,53,215,155,227,212,72,161,225,101,93,215,34,77,143,212,101,176,77,210,156,38,247,96,2,113,18,169,248,84,215,185,31,16,215,54,189,45,83,164,210,160,48,120,1,62,109,183,228,175,72,112,189,87,52,65,63,98,197,110,253,156,122,246,216,81,180,125,179,140,52,166,203,233,199,218,133,187,196,161,244,122,2,254,195,230,19,218,168,202,30,27,171,77,101,71,33,233,199,94,96,154,99,193,96,120,14,64,183,109,57,205,240,124,29,41,93,132,242,87,195,216,102,63,5,227,229,231,97,202,122,42,34,140,217,94,56,240,231,7,62,185,191,51,3,75,219,173,118,138,17,203,245,163,19,220,146,102,143,206,152,210,144,52,80,243,3,205,99,36,63,5,53,74,92,58,218,60,90,188,24,103,72,188,103,7,220,227,98,100,72,25,104,184,5,158,224,96,21,66,123,130,63,244,160,153,186,31,244,160,211,129,69,128,123,202,1,63,221,196,86,230,212,136,248,190,239,205,227,252,132,233,170,107,187,136,253,15,195,113,10,207,206,220,179,253,57,71,179,158,150,10,164,40,251,242,116,188,180,2,36,61,112,59,101,206,176,203,145,247,48,27,111,166,208,113,211,92,142,68,91,67,25,40,34,215,13,227,117,208,104,221,41,141,99,246,3,38,119,24,134,169,13,24,239,209,175,194,151,185,196,16,145,164,230,46,94,189,228,233,87,251,206,110,23,47,80,164,207,145,211,66,91,182,181,44,90,50,184,126,59,137,166,44,7,145,49,133,150,177,74,17,157,118,125,50,77,58,142,4,252,74,39,216,193,6,166,110,72,144,165,218,157,36,246,172,37,163,9,126,69,32,17,121,207,248,58,233,116,236,55,140,184,202,243,38,31,225,132,87,42,133,253,178,147,171,22,145,94,109,177,119,116,218,254,251,91,10,12,98,45,109,6,182,160,140,149,37,177,230,225,155,129,78,42,165,144,115,109,194,105,131,209,208,88,175,254,40,142,176,63,74,140,181,113,35,46,109,98,235,58,232,74,5,245,237,131,50,139,183,40,153,56,242,173,137,121,138,237,212,80,198,128,58,120,111,240,57,36,169,192,248,219,216,36,228,140,131,201,223,83,140,29,127,148,166,62,61,63,70,47,75,7,219,18,12,243,22,217,26,233,156,148,12,43,209,205,46,179,144,215,126,21,22,217,247,43,182,130,125,30,219,76,204,108,34,94,203,37,175,102,138,44,130,71,197,23,250,30,189,169,151,141,131,33,57,253,252,156,115,148,139,151,70,180,121,115,31,212,167,253,116,106,235,212,49,176,39,70,53,246,160,157,214,43,116,195,95,190,112,101,37,145,224,248,82,123,252,77,238,47,160,199,55,90,119,160,105,231,240,126,132,158,104,122,234,218,90,247,40,206,163,225,44,175,111,145,39,13,70,151,198,153,146,56,142,134,67,116,111,236,164,161,26,16,205,164,166,131,80,30,49,245,236,1,138,21,168,112,120,238,43,158,145,232,123,156,124,243,68,141,95,27,62,231,186,126,216,51,225,185,252,162,232,59,64,79,46,65,179,17,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("8a10a692-749d-4236-a578-c1816f7dfa6e"));
		}

		#endregion

	}

	#endregion

}

