namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastColumnSettingsMapperSchema

	/// <exclude/>
	public class ForecastColumnSettingsMapperSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastColumnSettingsMapperSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastColumnSettingsMapperSchema(ForecastColumnSettingsMapperSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("9177fffe-d3e8-4d30-8661-d77d7d6e57f8");
			Name = "ForecastColumnSettingsMapper";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,237,88,75,111,219,70,16,62,43,64,254,195,192,189,80,64,64,1,61,70,15,35,145,163,64,69,45,27,81,220,30,130,30,182,228,80,90,148,92,178,187,75,7,170,225,255,222,89,238,82,124,136,148,105,59,189,245,100,238,206,123,230,155,153,149,5,75,80,101,44,64,248,138,82,50,149,70,218,95,166,34,226,187,92,50,205,83,225,175,82,137,1,83,250,183,159,223,190,121,120,251,102,148,43,46,118,176,193,239,58,21,5,251,47,42,21,211,35,97,123,80,26,147,246,217,255,149,139,191,171,203,186,173,36,169,139,183,41,45,237,117,178,196,190,123,127,197,2,157,74,142,170,139,99,147,115,127,139,242,158,7,120,157,134,24,251,87,76,51,138,89,75,146,34,1,18,249,73,226,142,98,135,181,208,40,35,202,206,123,88,151,121,88,166,113,158,136,45,106,77,106,213,53,203,50,148,133,80,150,255,25,243,0,120,41,243,148,200,232,161,16,59,26,187,70,189,79,67,245,30,110,11,69,150,56,153,76,96,166,242,36,97,242,176,40,47,62,163,86,160,247,8,145,51,0,65,97,1,148,51,1,33,133,4,145,76,147,54,139,127,84,58,105,107,157,101,76,178,4,4,33,98,126,145,43,148,148,19,129,129,1,193,197,226,142,206,164,162,188,160,40,149,102,34,64,127,54,41,196,186,181,88,155,23,139,85,203,137,19,33,137,58,151,66,45,150,29,113,204,38,37,213,176,55,115,105,74,103,210,209,157,105,67,245,238,26,145,64,51,176,119,70,229,168,41,237,156,28,79,93,121,80,132,182,66,197,249,209,2,164,121,89,150,112,25,51,165,134,96,229,219,21,70,44,143,245,71,46,66,34,121,250,144,97,26,121,103,5,199,227,63,42,148,5,198,18,156,99,135,39,253,232,7,160,228,247,76,163,165,102,246,0,74,75,211,71,148,108,171,109,67,21,246,138,110,251,36,52,215,212,108,246,227,176,13,246,152,48,192,218,225,29,124,206,121,232,18,123,183,14,199,240,80,36,222,22,182,193,234,91,237,202,95,113,169,244,141,116,137,242,2,152,47,32,240,73,24,230,243,154,166,75,223,56,98,250,220,149,166,93,155,174,240,82,77,229,199,176,12,208,29,225,158,75,157,179,24,58,48,182,226,113,92,94,60,1,41,232,134,147,11,185,161,27,66,36,89,206,98,254,15,153,159,131,25,118,254,85,117,55,107,112,47,60,215,62,165,35,227,169,83,217,91,4,101,255,204,91,62,54,152,174,153,96,59,148,62,85,118,237,186,250,227,129,82,235,213,157,243,183,105,46,3,52,25,159,158,198,97,115,116,236,218,57,8,252,222,149,69,155,130,145,213,101,125,48,213,35,1,235,104,81,75,219,147,163,47,24,161,68,114,166,130,27,241,53,124,34,22,75,188,101,122,15,151,151,45,112,42,135,189,110,25,138,196,89,186,37,106,26,246,155,169,211,159,97,169,46,86,25,91,229,34,232,55,85,81,159,97,168,18,106,155,9,123,12,132,88,133,30,80,247,221,208,60,96,34,236,8,188,70,45,53,243,152,22,92,81,206,182,238,35,197,95,171,77,170,55,121,28,223,200,79,73,166,15,222,24,46,173,248,232,4,227,86,76,45,188,30,101,99,154,100,130,84,89,251,143,211,250,228,40,33,247,188,254,255,127,191,246,239,87,183,95,254,139,53,219,179,103,221,84,112,174,47,247,24,252,245,65,238,242,132,144,103,16,228,153,80,105,55,58,110,55,126,120,4,237,105,104,64,87,32,238,247,61,215,184,53,143,90,111,92,106,47,1,99,128,100,53,60,14,24,99,141,169,223,30,243,213,51,97,56,30,7,61,31,78,125,42,184,218,80,53,231,47,152,73,234,26,65,120,237,130,168,95,138,213,193,232,42,76,8,209,212,108,238,37,209,101,179,253,62,160,189,73,147,192,44,153,161,61,148,74,227,143,237,37,83,70,72,163,226,91,21,11,192,237,253,115,45,115,207,226,28,143,199,175,3,213,84,82,46,86,247,118,57,217,59,15,176,67,61,53,62,78,225,241,165,193,200,114,81,57,71,6,76,130,243,97,85,10,79,52,245,69,214,181,44,127,72,112,89,177,196,94,29,82,159,154,190,120,78,86,242,15,9,38,162,229,87,76,167,215,134,211,175,168,47,160,214,218,127,113,56,81,177,22,143,205,61,220,253,110,193,19,119,221,50,134,218,150,127,185,175,85,150,66,124,166,183,61,162,231,211,27,190,34,177,153,125,235,128,25,113,197,63,62,236,151,8,135,59,126,91,87,209,16,60,3,243,250,243,171,195,249,1,191,62,233,238,95,212,196,234,40,198,17,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("9177fffe-d3e8-4d30-8661-d77d7d6e57f8"));
		}

		#endregion

	}

	#endregion

}

