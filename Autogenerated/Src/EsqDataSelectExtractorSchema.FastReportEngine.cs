namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: EsqDataSelectExtractorSchema

	/// <exclude/>
	public class EsqDataSelectExtractorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public EsqDataSelectExtractorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public EsqDataSelectExtractorSchema(EsqDataSelectExtractorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("479ad307-f341-43d0-a57b-17863df0d694");
			Name = "EsqDataSelectExtractor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("907f2de3-5104-49b3-a54a-bb8730240b72");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,173,84,193,110,219,48,12,61,187,64,255,129,195,46,14,96,232,3,218,44,64,145,38,69,49,100,203,154,110,59,14,138,195,196,26,28,217,147,228,182,70,209,127,31,37,217,113,228,58,29,10,236,210,130,244,35,249,248,248,20,201,247,168,75,158,34,220,163,82,92,23,91,195,166,133,220,138,93,165,184,17,133,100,119,88,22,202,8,185,99,115,174,141,143,102,114,39,36,178,153,254,115,126,246,124,126,22,85,154,190,195,170,214,6,247,151,189,152,218,229,57,166,182,151,102,55,40,81,137,180,195,188,103,234,112,149,194,83,121,54,147,70,24,129,122,8,208,13,184,230,134,175,138,74,165,200,174,214,218,40,238,185,82,17,149,125,84,184,163,8,166,57,215,250,2,104,99,7,71,187,209,236,201,129,11,229,144,101,181,206,69,10,169,5,158,192,193,5,220,14,164,199,158,75,199,35,144,98,76,189,222,4,216,244,36,9,71,78,136,208,179,163,117,216,96,46,48,223,208,10,75,37,30,184,65,255,177,244,1,40,228,155,66,230,53,124,215,168,168,187,244,7,131,95,85,16,95,54,45,81,110,124,215,112,4,1,73,191,202,238,100,7,57,65,154,57,94,156,97,89,226,222,208,112,230,8,172,195,162,168,71,5,62,193,43,110,81,244,242,54,193,5,154,172,56,41,130,179,75,189,74,51,220,243,111,21,170,26,166,164,139,65,98,253,83,152,140,124,92,237,229,130,151,177,227,19,181,203,56,60,224,113,148,120,196,237,29,201,250,149,100,189,22,142,34,87,245,152,4,34,211,37,80,172,127,219,59,65,201,21,61,65,131,74,55,69,69,101,96,0,239,255,79,32,109,89,180,186,60,112,101,135,147,30,18,31,95,239,16,247,116,99,199,136,5,151,124,135,42,9,217,179,47,196,104,228,244,140,14,227,154,254,167,153,197,77,197,150,94,30,79,51,136,45,49,95,14,66,246,38,120,45,117,187,67,55,134,93,109,54,177,143,216,103,172,29,51,155,243,5,237,151,31,60,175,144,45,185,201,70,199,100,95,220,95,91,113,175,106,42,154,139,156,132,157,171,98,239,31,208,242,160,117,95,149,228,232,14,77,51,133,166,82,142,247,251,156,245,15,215,67,99,251,248,63,60,122,146,247,40,213,94,2,180,211,216,233,210,232,43,182,16,127,8,192,238,87,143,249,107,104,43,215,13,26,167,106,220,85,147,73,201,139,141,191,186,227,141,14,87,51,153,42,30,189,237,158,82,44,109,223,56,56,69,231,205,19,47,41,124,53,225,62,172,59,87,199,164,179,127,112,37,199,225,88,102,219,57,233,163,135,111,232,179,97,146,114,127,1,76,208,186,134,26,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("479ad307-f341-43d0-a57b-17863df0d694"));
		}

		#endregion

	}

	#endregion

}

