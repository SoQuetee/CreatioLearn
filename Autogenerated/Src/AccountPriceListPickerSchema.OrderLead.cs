namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: AccountPriceListPickerSchema

	/// <exclude/>
	public class AccountPriceListPickerSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public AccountPriceListPickerSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public AccountPriceListPickerSchema(AccountPriceListPickerSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b7a0a820-d8a1-46e7-b253-7496058e4918");
			Name = "AccountPriceListPicker";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("4c797525-d05e-4bd8-84e9-5dcb79ad7c60");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,149,84,77,111,219,48,12,61,187,64,255,3,225,94,28,96,176,239,93,98,96,105,155,34,192,6,4,75,183,29,134,29,52,153,78,132,217,146,167,143,108,217,208,255,62,89,146,157,216,77,50,244,72,138,31,239,61,146,226,164,70,213,16,138,240,132,82,18,37,74,157,222,9,94,178,141,145,68,51,193,175,175,254,94,95,69,70,49,190,129,245,94,105,172,223,246,246,113,74,93,11,126,250,69,226,57,127,122,63,63,251,180,32,84,11,201,80,217,8,27,115,35,113,99,209,192,93,69,148,186,133,119,148,10,195,245,74,50,138,239,153,210,43,70,127,160,116,145,89,150,193,84,153,186,38,114,159,7,219,101,65,41,36,40,172,144,182,188,160,207,133,82,138,186,171,152,118,21,178,163,18,95,239,177,36,166,210,115,198,11,11,53,209,251,6,69,153,44,71,237,39,147,111,54,184,49,223,43,70,129,186,150,167,113,194,45,140,115,109,98,171,115,207,115,193,176,42,44,209,149,20,218,2,198,194,113,139,154,206,4,137,164,16,188,218,195,39,133,210,78,140,7,90,67,211,139,23,221,32,47,124,225,96,119,106,10,174,180,52,173,210,109,47,135,220,71,140,85,116,142,37,103,154,145,138,253,65,5,4,56,254,2,102,243,9,183,219,35,74,208,91,180,41,136,64,37,150,179,248,52,245,56,203,189,52,105,223,37,27,183,153,54,68,146,26,184,93,205,89,108,6,124,226,252,201,118,105,125,64,123,103,58,205,92,134,43,16,228,63,221,61,25,137,53,44,62,1,55,130,104,20,52,27,133,181,43,27,61,95,22,246,3,234,173,240,243,99,59,162,177,155,158,51,96,237,150,16,30,81,143,97,250,151,228,209,176,2,136,127,91,22,29,46,137,218,72,238,116,15,113,67,164,19,23,21,69,246,128,42,83,243,36,238,203,46,139,184,127,92,216,109,79,186,233,28,220,95,182,40,49,137,219,200,116,169,30,126,26,82,37,190,78,234,182,36,57,192,9,57,68,5,24,175,20,228,204,66,59,206,86,146,30,244,124,31,64,158,145,99,71,100,231,12,130,206,46,72,122,72,119,112,163,65,102,250,240,27,169,209,184,182,215,93,225,71,164,66,22,211,182,107,158,180,119,102,183,109,150,123,210,222,76,109,31,47,206,103,82,25,12,161,67,189,223,128,48,218,179,146,168,236,239,17,26,135,41,122,223,235,164,251,223,125,90,84,208,180,24,170,246,91,243,223,42,57,252,107,103,206,237,197,201,245,82,197,121,16,19,88,129,92,179,146,89,234,199,199,230,82,61,33,149,247,236,167,89,231,58,58,200,29,147,218,238,212,203,49,95,94,246,211,11,49,26,230,9,1,131,111,168,233,243,63,154,73,241,134,238,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b7a0a820-d8a1-46e7-b253-7496058e4918"));
		}

		#endregion

	}

	#endregion

}

