namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: TempAccessProxyDtoSchema

	/// <exclude/>
	public class TempAccessProxyDtoSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TempAccessProxyDtoSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TempAccessProxyDtoSchema(TempAccessProxyDtoSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("04544653-713e-4c63-ac57-d9a457053d3c");
			Name = "TempAccessProxyDto";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("f214e3c2-8cc2-4e62-be3f-96a9b4832c80");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,173,86,77,111,226,48,16,61,183,82,255,195,136,30,150,94,200,125,65,72,21,208,10,105,181,160,22,78,171,61,152,100,18,172,13,118,214,118,170,34,180,255,125,199,249,34,164,4,8,225,4,118,230,205,188,177,103,230,89,176,13,234,136,185,8,11,84,138,105,233,155,222,72,10,159,7,177,98,134,75,209,155,124,26,84,130,133,207,174,139,90,207,153,251,135,5,248,112,191,123,184,191,139,53,23,1,188,111,181,193,77,191,178,38,47,97,136,174,117,161,123,175,40,80,113,151,108,200,234,81,97,64,187,48,10,153,214,223,233,135,163,48,111,168,101,172,40,66,98,242,107,182,210,50,68,131,221,206,82,151,169,205,158,99,179,158,10,131,65,198,110,188,152,245,42,30,58,79,191,201,133,227,56,48,208,241,102,195,212,118,152,173,83,67,80,185,37,120,168,93,197,163,196,83,142,113,74,160,40,94,133,220,5,215,50,253,74,244,110,151,144,45,18,154,43,25,161,50,28,41,171,121,130,76,191,87,169,36,27,175,104,52,72,5,218,254,154,53,82,144,132,28,247,122,5,198,169,130,6,31,44,140,177,88,46,106,96,123,171,44,1,109,148,189,153,52,131,169,7,59,8,208,244,109,236,62,252,107,66,82,80,185,128,244,75,132,155,177,61,137,63,77,251,167,133,94,77,60,59,166,229,219,244,170,227,61,196,157,38,186,84,188,5,207,88,27,185,65,69,23,74,174,184,207,233,111,119,52,29,63,53,164,125,129,155,218,44,50,108,155,58,41,90,172,25,237,99,176,47,52,127,112,109,6,147,207,136,43,182,10,49,239,199,169,240,229,16,138,238,60,70,253,17,133,151,182,106,178,78,119,43,155,149,225,116,52,204,21,35,234,168,159,250,65,85,152,23,39,2,156,102,42,208,0,182,215,201,66,224,132,63,63,178,106,232,223,118,112,21,20,99,193,255,198,105,143,55,159,10,23,20,102,187,9,224,113,29,133,108,123,5,189,26,100,29,205,113,106,222,142,109,113,168,152,92,161,45,36,88,46,70,224,49,131,208,229,62,48,177,37,249,34,105,222,112,129,94,195,241,80,114,106,29,158,74,106,76,223,23,156,82,153,20,24,187,117,163,254,122,95,75,69,130,100,139,218,108,51,121,202,59,236,88,99,140,247,130,109,155,32,3,22,34,104,155,162,227,12,207,246,69,109,216,86,157,49,202,165,56,31,185,53,151,210,82,148,179,48,23,212,115,107,25,205,67,29,62,147,206,70,42,221,82,195,80,223,116,89,177,152,46,132,236,178,12,79,42,87,243,242,172,45,195,23,30,82,231,129,145,224,115,225,101,229,103,27,87,201,56,88,67,94,89,20,94,125,112,23,207,15,234,23,114,115,88,143,58,141,113,243,87,230,254,97,0,33,9,233,213,207,138,243,18,157,94,202,176,116,43,71,85,185,225,235,248,102,189,117,65,57,208,222,127,30,167,67,89,32,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("04544653-713e-4c63-ac57-d9a457053d3c"));
		}

		#endregion

	}

	#endregion

}

