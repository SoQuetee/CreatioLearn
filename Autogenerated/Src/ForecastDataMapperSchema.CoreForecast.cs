namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastDataMapperSchema

	/// <exclude/>
	public class ForecastDataMapperSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastDataMapperSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastDataMapperSchema(ForecastDataMapperSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("5f49ba06-6712-4c2c-9ad3-21e060b91318");
			Name = "ForecastDataMapper";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,173,87,91,111,219,54,20,126,118,129,254,7,206,5,58,25,11,100,96,143,75,236,97,115,46,117,215,180,65,108,244,101,24,2,70,162,19,14,146,168,146,84,130,160,200,127,223,225,225,85,146,157,110,67,95,20,147,231,194,115,253,206,73,67,107,166,90,90,48,178,101,82,82,37,118,58,95,137,102,199,239,58,73,53,23,77,126,46,36,43,168,210,159,127,126,253,234,235,235,87,147,78,241,230,142,108,158,148,102,245,241,224,12,162,85,197,10,35,167,242,11,214,48,201,139,17,207,7,222,124,137,151,233,179,117,45,26,160,0,109,62,159,147,19,213,213,53,149,79,75,119,190,146,226,129,151,76,145,154,233,123,81,42,162,5,169,105,75,118,206,64,82,82,77,115,47,60,79,164,219,238,182,226,5,41,42,170,20,241,254,156,2,247,37,109,91,38,129,195,56,54,121,35,217,29,88,78,192,127,165,105,163,213,47,240,38,127,160,154,161,77,147,214,30,72,97,232,68,105,137,246,75,198,62,10,48,107,195,90,10,33,19,146,44,200,244,230,230,236,244,226,236,230,102,106,221,153,188,97,77,105,181,187,179,123,234,210,186,114,224,161,7,193,75,114,206,171,10,194,218,213,205,103,90,117,76,101,235,24,228,147,45,189,173,152,165,46,193,46,243,87,29,145,107,241,72,164,120,60,66,227,144,197,56,187,134,224,19,14,159,25,65,119,39,38,112,180,184,39,89,162,197,41,33,220,255,82,158,251,0,251,61,175,202,200,157,175,204,89,178,38,72,77,30,168,36,26,37,88,85,65,108,26,246,72,182,225,236,185,38,86,223,10,34,9,60,168,53,199,195,79,16,204,41,124,189,126,184,59,234,203,172,203,32,177,46,3,237,66,138,174,245,234,246,200,34,221,138,90,106,34,187,95,227,53,43,132,44,145,6,193,5,138,35,60,31,187,31,232,80,97,189,52,28,230,172,126,245,226,249,57,151,74,127,146,167,108,71,187,74,103,192,97,35,178,36,238,103,126,5,253,34,224,133,252,236,75,71,43,149,5,203,102,94,201,228,237,219,192,237,189,15,220,206,224,217,204,27,196,119,36,67,123,126,128,176,119,85,21,147,50,9,25,201,177,170,192,226,172,20,208,38,108,86,132,75,175,198,234,65,237,219,167,150,153,8,44,66,27,97,179,168,252,211,237,223,80,146,40,102,237,178,156,201,139,201,147,239,168,178,193,84,240,174,150,201,75,207,62,166,222,3,7,42,161,250,243,223,202,50,11,154,188,167,150,29,191,207,253,22,26,119,192,5,211,163,203,204,117,140,55,87,50,221,201,198,150,234,72,129,243,40,41,132,124,43,54,136,6,217,204,85,203,168,86,220,253,138,182,166,111,221,53,186,228,40,107,133,21,233,5,236,201,75,37,1,112,29,244,129,43,125,18,218,104,153,217,10,177,165,56,8,129,3,42,72,88,141,2,198,137,117,153,93,116,188,252,243,47,2,160,197,0,234,214,37,224,134,185,34,210,153,238,99,97,146,31,153,76,234,123,165,228,66,229,165,146,80,28,199,164,32,8,240,242,138,74,109,28,136,234,204,172,41,168,206,140,75,96,204,87,175,230,217,73,59,237,214,133,252,189,224,77,54,6,220,35,175,122,150,186,255,109,200,197,169,96,137,189,121,3,21,2,195,229,158,225,116,193,90,243,88,152,247,198,138,149,50,70,212,164,129,57,186,152,154,9,52,93,110,65,180,63,148,78,230,200,21,133,172,95,106,25,161,156,136,29,88,192,224,41,201,118,139,105,130,177,211,249,242,100,238,5,48,177,118,156,29,156,3,96,63,12,182,228,74,101,233,208,67,147,124,254,76,98,192,77,199,55,46,46,171,210,39,51,140,0,135,61,205,78,36,3,3,93,93,13,166,134,121,160,69,92,235,131,177,197,186,252,35,196,45,191,102,109,5,43,72,54,37,211,35,3,247,190,173,177,106,76,203,45,18,27,135,56,74,13,130,82,4,119,143,132,241,189,128,133,166,138,173,170,33,20,186,7,226,88,178,254,4,220,74,103,132,51,58,25,10,206,169,248,98,164,132,86,31,123,28,153,220,184,60,28,248,56,148,212,185,164,152,109,90,153,106,127,199,203,146,37,234,247,211,135,51,42,137,163,65,82,92,7,122,32,234,32,215,217,133,76,135,66,179,127,122,246,211,188,15,28,199,161,217,114,93,133,160,172,21,152,158,170,192,115,164,158,149,220,54,101,20,63,52,149,60,107,58,146,188,34,67,187,236,217,234,111,226,83,255,39,226,94,218,27,213,55,210,133,186,7,142,14,228,98,106,82,24,123,1,153,0,8,29,60,153,206,195,78,249,126,8,149,10,57,244,27,200,69,76,252,207,224,54,156,169,255,10,226,134,66,1,232,134,132,61,112,103,147,66,200,97,208,28,108,187,14,23,55,162,147,5,42,238,117,232,200,148,17,64,186,133,34,192,34,156,251,152,232,96,103,239,54,98,54,17,215,148,163,237,63,44,249,184,224,167,253,219,51,119,216,221,195,74,139,156,7,139,205,95,152,197,65,237,217,131,138,152,222,157,20,181,159,148,102,233,205,131,178,151,171,17,153,161,172,18,201,23,11,49,46,14,94,200,46,12,63,42,191,83,28,174,198,239,90,96,235,179,166,171,153,52,151,201,22,102,93,112,0,48,218,175,72,127,242,152,34,128,28,154,107,235,57,110,124,191,63,217,141,125,97,149,229,126,145,156,229,27,102,12,205,238,100,139,255,87,24,142,111,239,167,195,165,47,221,246,188,166,252,15,246,180,103,111,77,201,251,247,208,192,177,21,166,45,252,14,58,11,231,222,14,103,124,61,180,159,217,59,248,252,3,136,38,214,49,143,16,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("5f49ba06-6712-4c2c-9ad3-21e060b91318"));
		}

		#endregion

	}

	#endregion

}

