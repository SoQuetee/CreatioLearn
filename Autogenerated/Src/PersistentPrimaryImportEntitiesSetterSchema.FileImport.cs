namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: PersistentPrimaryImportEntitiesSetterSchema

	/// <exclude/>
	public class PersistentPrimaryImportEntitiesSetterSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public PersistentPrimaryImportEntitiesSetterSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public PersistentPrimaryImportEntitiesSetterSchema(PersistentPrimaryImportEntitiesSetterSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("dde63564-5b84-41c8-9562-f1ec48fb83d6");
			Name = "PersistentPrimaryImportEntitiesSetter";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,157,86,75,111,27,55,16,62,111,128,252,7,66,185,80,128,176,70,175,149,165,192,241,171,6,156,212,176,220,230,24,208,171,145,68,100,69,110,73,174,98,53,240,127,239,112,249,88,238,195,142,209,131,97,145,59,143,111,102,190,153,161,96,123,208,21,43,128,60,128,82,76,203,141,201,207,165,216,240,109,173,152,225,82,228,87,188,132,155,125,37,149,121,255,238,231,251,119,89,173,185,216,146,213,81,27,216,207,227,57,213,86,144,95,10,195,13,7,61,239,41,224,215,178,132,194,26,214,249,53,8,80,188,24,200,220,114,241,207,184,229,253,94,138,151,124,190,136,229,138,21,70,42,7,6,101,62,40,216,162,123,114,94,50,173,127,39,119,160,52,71,183,194,220,41,190,103,234,232,98,13,1,172,192,24,80,141,226,201,201,9,57,213,245,222,10,45,253,249,76,16,46,180,97,2,19,40,55,196,236,184,38,133,53,76,240,135,194,204,98,156,252,177,4,178,145,138,104,180,101,241,85,206,17,225,141,39,2,222,85,30,124,156,36,78,170,250,177,228,133,183,249,70,172,153,45,83,140,243,138,67,185,182,129,42,126,96,6,236,39,251,87,185,35,41,16,161,33,218,40,139,236,27,66,150,181,42,224,51,19,108,11,234,11,178,131,44,200,228,77,142,39,243,212,110,176,248,88,111,188,240,83,1,229,189,252,113,35,214,240,20,12,143,124,234,154,185,113,18,183,114,139,112,200,183,178,249,239,10,153,125,0,177,118,65,250,179,143,248,78,201,10,148,5,246,98,212,127,105,80,72,115,225,168,216,63,254,36,91,48,115,242,220,215,114,88,238,152,66,244,24,176,30,94,120,77,237,213,83,229,91,89,176,146,255,203,144,13,43,151,155,43,89,139,245,69,93,97,129,81,224,130,25,102,19,81,57,8,86,53,67,99,254,87,166,192,212,74,16,1,63,134,150,232,189,47,219,10,137,142,117,155,141,22,114,230,12,101,147,129,190,206,95,129,146,255,205,202,26,38,211,252,65,122,111,211,166,66,89,147,158,97,142,122,88,72,255,156,68,70,124,80,221,244,231,95,165,250,222,204,164,188,167,235,75,210,75,108,151,34,254,223,98,25,200,66,62,126,36,52,252,94,184,182,119,35,225,136,19,200,156,118,212,151,180,65,103,179,124,110,27,67,213,86,240,76,109,235,61,146,159,78,234,14,210,201,172,7,125,58,35,175,235,243,30,97,208,66,159,67,211,233,244,23,252,78,44,19,100,120,51,33,124,74,220,180,120,83,187,210,30,233,187,161,77,125,157,122,66,139,158,216,60,169,71,10,215,113,34,0,254,12,102,39,59,51,40,173,223,65,242,53,249,83,36,24,143,151,74,73,69,219,110,128,144,38,247,217,79,78,119,152,145,235,26,13,184,171,21,104,141,10,55,235,128,255,192,20,129,3,102,2,107,160,17,190,173,76,106,106,197,14,208,120,187,140,66,190,225,90,239,11,18,122,167,3,98,209,133,145,74,68,24,81,40,222,184,214,113,29,228,56,151,255,193,196,186,132,232,143,218,45,50,107,81,79,231,163,141,214,164,13,75,233,75,28,138,123,15,123,121,128,216,202,244,130,55,133,66,137,211,154,11,211,77,228,146,236,152,222,61,216,73,128,31,174,149,172,43,108,112,47,24,68,182,246,218,29,210,172,242,225,232,198,104,19,97,124,57,40,109,232,212,118,217,195,177,130,53,238,254,122,47,154,113,210,184,88,210,87,182,131,31,50,124,67,35,196,252,65,29,209,86,99,128,142,184,159,17,89,155,46,81,42,219,86,30,123,0,143,54,9,77,113,158,227,240,67,156,100,177,32,191,69,161,44,81,205,211,28,31,199,163,116,112,179,103,55,0,50,40,53,68,83,73,186,28,189,19,106,89,66,94,52,109,219,31,188,244,149,161,28,220,101,99,125,51,234,106,150,230,98,56,117,242,30,113,163,131,54,251,142,89,99,137,143,193,119,246,194,128,172,184,151,11,180,31,152,74,111,46,5,142,69,101,141,159,6,178,133,199,80,202,180,38,219,159,34,195,109,63,134,39,211,181,251,68,165,29,248,242,127,50,205,195,183,174,98,180,232,100,144,162,0,0,55,97,219,85,20,172,107,204,78,55,23,248,222,3,86,236,104,51,127,252,208,18,253,72,34,217,126,221,198,73,159,58,115,233,18,206,94,132,138,97,180,5,108,242,97,209,223,242,200,216,56,86,94,90,54,237,236,78,246,76,255,41,220,92,96,16,154,192,19,218,182,143,155,80,34,98,228,216,67,119,248,210,117,55,13,73,137,192,56,22,147,170,93,147,75,23,33,105,175,242,211,147,230,48,174,26,92,77,150,151,125,64,29,69,191,48,195,44,165,131,7,93,235,16,123,230,13,124,77,0,158,239,160,248,30,86,255,151,186,44,169,197,38,55,180,74,118,125,156,114,17,222,153,56,210,118,86,13,0,45,18,72,190,237,250,125,21,49,249,239,126,205,216,85,135,63,251,207,183,145,226,187,219,244,242,249,63,89,236,114,66,40,14,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateFoundDuplicateDataExceptionLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateFoundDuplicateDataExceptionLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("167a84ec-7b08-4fb0-af8f-a6075508b79c"),
				Name = "FoundDuplicateDataException",
				CreatedInPackageId = new Guid("b51eda84-5cfb-4f7f-b7eb-7f869b20e7e8"),
				CreatedInSchemaUId = new Guid("dde63564-5b84-41c8-9562-f1ec48fb83d6"),
				ModifiedInSchemaUId = new Guid("dde63564-5b84-41c8-9562-f1ec48fb83d6")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("dde63564-5b84-41c8-9562-f1ec48fb83d6"));
		}

		#endregion

	}

	#endregion

}

