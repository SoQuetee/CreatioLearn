namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastSnapshotRepositorySchema

	/// <exclude/>
	public class ForecastSnapshotRepositorySchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastSnapshotRepositorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastSnapshotRepositorySchema(ForecastSnapshotRepositorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("c0a57abe-fe8c-a368-9ff0-06fdd843c47b");
			Name = "ForecastSnapshotRepository";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,189,87,75,111,227,54,16,62,123,129,253,15,132,247,34,3,129,12,244,152,196,46,156,172,19,24,232,166,219,42,187,123,88,244,192,80,35,155,168,68,57,36,229,64,8,242,223,59,20,73,189,44,63,130,162,189,36,33,197,111,248,205,227,155,97,4,205,64,109,41,3,242,8,82,82,149,39,58,188,205,69,194,215,133,164,154,231,34,188,203,37,48,170,244,247,95,62,126,120,253,248,97,84,40,46,214,36,42,149,134,236,170,183,70,104,154,2,51,56,21,222,131,0,201,89,115,166,125,67,150,229,98,248,139,132,67,251,225,82,104,174,57,168,131,7,238,40,211,185,180,39,240,204,39,9,107,164,66,86,66,131,76,208,201,75,178,242,238,68,130,110,213,38,215,127,194,54,87,28,81,101,5,153,78,167,228,90,21,89,70,101,57,119,235,175,50,223,241,24,20,161,140,129,82,68,231,68,57,52,137,169,166,68,33,156,174,33,244,248,105,203,192,182,120,74,57,35,220,83,56,206,96,244,90,177,168,153,127,1,189,201,99,117,137,28,248,142,106,176,95,251,36,171,141,69,28,43,34,224,165,225,134,60,107,122,21,185,125,118,118,103,75,37,205,136,192,82,152,141,61,122,60,143,218,62,134,215,211,234,84,5,218,229,60,54,247,5,125,87,62,87,215,185,197,228,234,8,219,123,208,24,207,52,109,216,230,9,73,156,185,115,185,250,243,171,120,60,247,84,136,218,0,104,130,249,194,98,73,56,200,14,243,125,19,60,197,196,216,138,71,35,213,138,176,142,0,246,240,18,116,33,133,154,95,79,253,95,230,211,106,41,138,12,36,125,74,225,122,40,46,115,227,243,34,77,131,251,2,163,215,80,191,32,119,45,14,164,77,232,116,4,187,117,248,84,54,27,173,0,144,119,166,222,132,51,218,183,115,102,28,6,107,2,201,90,191,155,59,188,115,159,64,196,182,218,171,245,155,85,110,119,211,203,225,54,165,10,197,112,142,134,185,216,96,247,209,113,206,8,147,144,204,198,71,116,55,38,83,67,253,231,103,72,104,145,234,27,46,98,108,46,129,46,183,144,39,193,17,224,100,242,87,35,113,102,200,29,225,70,78,116,159,190,246,177,6,148,150,133,233,104,166,1,84,151,216,19,238,194,195,198,130,111,170,170,33,97,123,49,41,58,203,9,49,125,124,52,234,29,154,245,142,153,46,235,210,209,207,71,205,17,91,227,22,164,233,201,166,69,229,26,145,16,59,146,126,73,122,247,244,150,175,100,13,250,138,40,243,227,196,109,195,221,112,107,23,164,234,74,17,221,65,53,38,202,19,205,201,197,96,71,37,129,234,60,250,223,101,102,199,77,25,177,13,100,244,11,21,216,225,37,14,53,189,194,180,80,193,224,166,124,64,217,4,227,254,61,227,73,120,43,1,25,57,30,93,171,147,42,172,35,123,103,24,129,198,145,89,100,226,59,77,11,180,133,210,187,168,57,134,81,71,44,135,81,145,105,121,61,168,221,58,142,195,136,64,27,100,214,61,4,134,51,72,104,170,220,254,217,9,170,171,181,238,22,239,17,100,136,195,101,92,105,210,215,250,153,35,199,101,181,246,232,118,3,236,239,133,92,99,103,22,250,161,192,238,107,90,29,138,186,70,56,127,251,129,235,34,151,217,22,19,217,131,214,49,222,51,81,167,13,107,106,96,55,92,41,107,112,66,126,37,166,43,134,15,240,98,126,227,198,229,16,160,103,223,164,169,109,217,174,103,36,182,237,11,141,154,157,71,158,65,248,77,179,135,252,165,109,213,124,178,246,90,82,105,143,236,58,201,239,207,154,29,112,221,196,253,23,99,177,173,93,245,140,161,48,207,158,182,90,255,40,96,175,9,14,201,249,130,12,168,215,9,64,61,135,216,102,204,180,172,172,89,225,96,234,22,233,11,45,85,4,230,157,139,87,99,135,134,6,129,21,106,15,58,113,77,194,223,101,12,242,166,92,40,22,180,44,91,223,148,57,31,152,181,109,24,118,247,7,215,155,175,102,210,130,57,18,248,48,100,56,125,185,202,197,35,78,165,112,249,92,208,20,217,87,37,136,18,110,226,230,171,209,4,135,213,175,113,36,106,174,193,80,219,40,52,239,244,225,246,100,208,190,40,148,11,240,111,92,233,225,20,122,207,154,251,204,127,13,75,202,54,1,199,255,10,200,108,238,50,86,215,176,245,220,88,29,212,179,59,61,114,10,67,2,173,194,240,223,218,42,51,215,24,239,76,112,226,86,143,187,54,85,53,175,250,234,196,3,157,124,14,66,188,120,230,62,135,22,247,230,156,244,191,237,155,167,137,210,191,150,78,87,55,103,63,163,254,47,49,96,194,80,166,22,97,195,165,130,86,181,212,67,180,83,103,189,107,47,122,239,191,38,140,167,74,161,169,4,55,153,142,36,219,143,67,159,241,78,165,156,134,183,144,174,84,142,96,134,139,229,237,200,176,28,122,224,226,222,63,5,142,81,54,137,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("c0a57abe-fe8c-a368-9ff0-06fdd843c47b"));
		}

		#endregion

	}

	#endregion

}

