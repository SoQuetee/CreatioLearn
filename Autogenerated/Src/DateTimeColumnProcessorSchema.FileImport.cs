namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: DateTimeColumnProcessorSchema

	/// <exclude/>
	public class DateTimeColumnProcessorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DateTimeColumnProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DateTimeColumnProcessorSchema(DateTimeColumnProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("06b79045-dff3-4417-9552-df56bd39d8fb");
			Name = "DateTimeColumnProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("52abf94a-4a51-4e9b-afae-86480a04ff1e");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,221,86,77,111,227,70,12,61,123,129,253,15,172,123,145,1,67,190,59,137,131,172,179,14,140,182,105,16,59,219,195,98,15,99,137,74,6,24,105,132,153,145,55,110,146,255,94,206,135,108,125,196,217,5,154,94,154,131,35,81,228,35,223,35,169,81,193,114,212,37,75,16,214,168,20,211,50,51,241,92,22,25,191,175,20,51,92,22,241,130,11,92,230,165,84,230,227,135,167,143,31,6,149,230,197,61,172,118,218,96,126,210,185,143,175,132,220,48,193,255,118,161,189,167,107,124,52,241,45,222,87,130,169,207,143,165,66,173,201,77,31,252,154,53,40,60,102,143,23,44,49,82,113,180,145,228,243,171,194,123,194,129,185,96,90,79,225,146,25,92,243,28,231,82,84,121,113,163,100,66,121,164,114,174,147,201,4,78,121,241,128,138,155,84,38,144,40,204,206,134,215,178,184,65,165,57,21,89,152,78,216,211,250,22,117,37,204,203,112,50,171,1,116,149,231,76,237,234,123,251,119,81,0,47,180,97,5,41,41,51,48,15,92,67,98,235,1,186,32,162,37,241,228,27,129,144,73,5,165,7,183,204,234,98,33,113,105,97,203,68,133,58,174,51,77,26,169,190,94,98,198,168,146,79,188,72,41,52,50,187,18,101,22,45,59,5,143,198,112,77,77,133,51,40,232,31,57,28,209,99,52,250,70,160,101,181,17,60,9,165,30,241,132,41,188,165,208,105,29,118,62,27,67,183,26,74,241,228,148,63,116,137,148,48,170,178,29,164,102,221,184,252,222,227,95,55,167,215,157,125,123,230,10,169,72,221,238,17,233,71,222,136,33,209,17,246,4,29,239,177,39,93,240,211,146,41,150,59,169,207,134,149,70,69,244,10,76,236,248,15,103,119,116,79,141,173,13,241,233,196,121,187,224,32,252,145,164,209,93,11,10,218,200,35,11,48,152,194,134,105,140,58,143,224,9,94,130,224,88,164,94,243,118,3,40,73,137,202,208,250,76,237,181,161,64,76,223,171,3,101,13,8,114,75,75,203,83,132,171,138,167,150,39,251,98,103,123,77,170,223,45,83,56,155,181,109,113,173,68,215,243,228,109,54,127,160,121,144,169,163,194,183,4,209,32,242,218,32,172,237,107,3,140,172,119,208,47,220,24,104,252,171,220,46,36,55,118,99,235,98,126,182,243,14,101,56,187,101,223,61,96,171,213,61,111,26,9,18,135,68,250,18,194,156,132,199,34,21,154,74,21,122,118,115,120,107,40,23,64,174,245,51,47,189,19,0,54,82,10,226,185,11,254,46,199,133,174,25,69,180,124,22,34,240,150,149,217,147,61,135,118,97,52,75,110,208,218,86,251,98,169,132,56,113,143,92,46,95,13,217,247,170,217,236,76,209,112,134,44,237,105,142,231,149,82,52,74,214,74,215,130,40,224,216,193,13,106,132,149,217,9,122,13,94,216,174,224,239,50,97,2,158,161,251,80,8,249,253,175,7,110,112,101,15,48,221,38,3,105,184,24,249,74,121,6,145,47,212,111,79,159,85,29,224,253,189,178,129,155,51,189,188,207,104,165,146,54,255,255,52,88,142,207,251,142,85,24,138,101,145,73,72,252,176,4,19,185,253,120,152,60,72,168,40,241,182,85,137,9,207,120,82,39,163,207,16,124,164,143,145,82,208,236,212,115,58,252,58,142,191,13,195,44,182,19,199,215,85,190,65,181,144,42,103,38,220,92,18,100,206,196,10,173,176,116,158,141,94,91,138,208,239,253,74,188,86,143,23,204,123,130,188,176,202,245,199,54,200,54,232,77,120,115,243,22,74,230,127,58,128,168,133,179,143,250,141,190,30,246,145,238,166,167,232,21,154,165,94,208,129,73,101,126,46,24,213,148,70,67,255,9,216,68,185,43,180,231,128,233,48,236,212,224,28,154,30,113,195,37,56,76,219,14,110,181,59,21,130,176,198,203,87,200,121,205,118,54,50,170,41,140,91,100,106,182,189,217,106,97,122,167,151,183,247,252,39,14,156,255,254,236,60,236,208,220,51,114,124,34,223,12,15,231,25,38,135,235,122,80,236,215,65,220,10,107,58,181,118,100,27,84,106,56,196,238,247,48,132,191,68,199,54,191,177,242,91,166,122,203,254,252,236,91,114,252,68,106,0,116,130,71,97,174,66,147,14,47,136,96,104,187,191,209,61,111,109,27,201,246,15,213,136,228,203,254,12,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("06b79045-dff3-4417-9552-df56bd39d8fb"));
		}

		#endregion

	}

	#endregion

}

