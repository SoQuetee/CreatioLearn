namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: TempAccessProxyExceptionsSchema

	/// <exclude/>
	public class TempAccessProxyExceptionsSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TempAccessProxyExceptionsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TempAccessProxyExceptionsSchema(TempAccessProxyExceptionsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("7f12bace-72ee-4042-9a07-c5a18b5d88ca");
			Name = "TempAccessProxyExceptions";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("f214e3c2-8cc2-4e62-be3f-96a9b4832c80");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,237,84,77,111,218,64,16,61,131,196,127,24,145,11,72,150,125,167,4,9,165,57,228,210,68,34,61,85,61,44,203,216,172,98,239,90,59,187,1,26,245,191,119,188,230,195,128,137,218,164,82,123,200,201,242,120,102,222,188,55,227,167,69,129,84,10,137,240,136,214,10,50,169,139,111,140,78,85,230,173,112,202,232,248,118,237,208,106,145,79,165,68,162,7,33,159,68,134,189,238,75,175,219,241,164,116,6,179,13,57,44,62,245,186,28,185,178,152,113,17,220,228,130,104,4,211,82,205,208,62,163,189,93,75,44,171,118,33,235,219,253,156,76,142,14,7,253,175,212,68,190,159,122,183,188,211,14,179,61,248,182,46,62,111,213,143,192,89,143,195,239,220,49,73,18,24,147,47,10,97,55,147,237,251,227,18,1,119,201,224,150,194,129,34,126,90,179,210,176,90,162,134,210,154,245,6,50,227,128,39,48,22,82,107,10,16,165,2,10,72,241,174,113,210,232,92,250,121,174,36,200,138,96,11,63,24,65,131,107,231,37,240,61,200,98,52,241,204,210,25,203,234,60,132,86,117,198,41,129,16,184,211,202,41,145,171,31,72,32,64,227,10,20,215,11,205,219,50,41,51,65,46,65,4,105,49,189,238,183,8,148,76,234,57,227,61,66,114,10,49,46,133,21,5,104,62,131,235,62,159,2,241,114,251,147,74,186,237,75,45,220,2,73,90,53,71,10,168,65,173,120,156,132,218,208,106,171,202,249,12,3,230,91,29,201,182,219,176,74,238,140,96,46,8,7,187,24,84,183,212,249,249,191,10,81,223,198,145,28,184,46,115,193,35,4,104,139,124,188,26,82,78,114,205,147,59,18,232,12,66,105,221,156,112,114,233,90,153,149,240,180,231,41,189,181,168,221,33,53,2,198,101,77,124,158,243,36,41,242,87,137,59,68,149,130,54,16,160,26,205,185,47,149,40,85,170,112,241,166,45,70,135,27,135,99,30,67,56,222,109,116,246,189,185,235,43,212,139,250,207,8,239,117,244,36,120,201,81,248,87,210,40,157,122,86,110,243,23,221,165,181,237,251,157,166,50,21,41,120,69,169,80,57,46,96,225,121,149,185,170,54,233,84,129,198,187,136,207,218,173,140,125,170,92,105,158,99,65,17,124,254,50,11,5,222,178,144,232,228,31,24,82,43,143,15,115,186,172,205,191,52,170,246,163,251,48,173,55,153,214,239,108,247,21,3,107,217,251,187,77,140,99,191,0,194,34,207,213,104,9,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("7f12bace-72ee-4042-9a07-c5a18b5d88ca"));
		}

		#endregion

	}

	#endregion

}

