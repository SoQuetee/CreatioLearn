namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: BaseTouchQueueMessageProcessorSchema

	/// <exclude/>
	public class BaseTouchQueueMessageProcessorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BaseTouchQueueMessageProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BaseTouchQueueMessageProcessorSchema(BaseTouchQueueMessageProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("3aa70af8-d87d-47b6-96a6-1b7d6c78bd6b");
			Name = "BaseTouchQueueMessageProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d23d224d-d671-416d-91d0-80132a374d7a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,141,86,77,111,219,56,16,61,187,64,255,195,192,189,200,128,97,239,217,31,42,186,78,186,40,182,9,178,104,122,90,44,10,90,30,43,68,37,210,32,41,183,110,145,255,190,67,82,148,40,201,118,114,177,37,106,62,223,123,28,82,176,18,245,129,101,8,143,168,20,211,114,111,102,27,41,246,60,175,20,51,92,138,183,111,126,191,125,51,170,52,23,57,124,57,105,131,229,178,247,78,246,69,129,153,53,214,179,191,80,160,226,89,107,19,135,85,216,174,231,133,220,178,98,177,216,200,178,148,98,246,89,230,57,45,95,242,155,125,100,153,145,138,163,38,11,178,121,167,48,167,124,176,41,152,214,11,248,147,105,124,148,85,246,244,79,133,21,222,161,214,44,199,7,37,51,122,146,202,121,204,231,115,88,233,170,44,153,58,165,245,123,109,129,26,108,202,2,193,156,14,184,131,210,251,195,94,201,146,124,16,33,83,184,95,143,219,12,227,121,58,11,49,231,81,208,67,181,45,120,6,108,171,141,162,130,33,179,229,189,80,29,248,242,207,127,251,237,106,111,219,37,136,141,170,44,20,212,245,131,203,230,45,250,237,185,133,79,130,27,206,10,254,139,58,100,32,240,7,112,242,103,130,216,150,123,48,79,24,119,119,189,74,234,216,119,51,107,178,205,251,233,86,7,166,88,9,130,36,181,30,87,26,21,149,43,188,48,198,233,166,82,10,133,1,187,14,89,243,97,182,154,59,47,23,164,134,239,122,37,201,215,78,100,232,38,154,16,156,91,242,79,250,203,86,197,163,145,149,25,229,95,3,61,220,49,65,113,21,73,214,248,229,196,51,252,32,185,48,122,60,89,58,143,123,105,248,158,59,31,11,224,160,174,240,189,159,208,123,91,6,190,144,22,12,230,167,196,175,61,215,148,162,216,121,86,187,20,83,159,7,84,134,148,190,176,207,134,194,225,206,155,28,194,43,220,112,151,132,192,95,61,146,100,167,240,177,18,217,106,80,219,148,248,54,105,10,161,130,229,85,173,180,202,232,107,254,246,72,204,121,140,172,14,140,132,66,230,244,71,159,224,224,121,177,91,22,173,217,37,129,28,20,63,82,17,208,15,8,223,176,125,89,118,219,60,114,101,42,86,12,125,226,103,79,108,142,6,214,105,39,24,188,127,15,73,103,97,237,76,71,110,104,248,129,114,178,236,175,250,241,211,196,82,29,109,182,15,42,175,74,250,156,244,101,61,133,174,26,39,147,154,120,125,166,158,53,28,89,81,225,107,84,112,135,230,73,238,134,18,120,113,155,107,79,53,201,231,34,15,1,221,102,74,29,37,223,193,64,169,23,140,233,207,114,77,176,57,192,238,105,179,39,3,225,133,17,250,250,56,55,168,51,197,15,22,195,203,225,156,158,65,161,174,10,51,12,29,212,226,218,33,200,175,197,185,161,62,31,121,137,84,6,83,198,190,197,177,137,169,63,166,112,251,51,67,87,16,96,243,68,67,160,42,138,48,77,142,76,121,209,91,20,232,91,7,148,8,2,50,229,123,72,162,48,221,56,109,160,8,134,40,94,12,78,211,66,11,131,141,16,169,119,246,73,236,101,210,212,53,141,123,236,121,79,7,89,67,60,133,166,82,194,191,60,187,223,56,195,173,82,52,136,207,167,104,186,156,182,42,24,69,146,111,9,147,71,58,227,249,14,29,242,245,124,175,153,74,220,25,192,244,247,179,170,138,224,47,117,78,64,133,19,155,233,225,128,174,241,111,200,93,54,190,77,209,20,33,8,98,246,213,100,247,242,135,55,50,234,20,24,106,132,17,246,200,191,148,217,14,15,59,127,147,201,127,4,250,81,126,39,214,117,94,67,248,12,25,51,52,32,147,88,71,13,227,86,159,100,123,30,185,133,181,172,137,48,79,42,148,243,28,142,176,129,103,71,11,158,186,184,219,87,15,155,151,46,20,55,184,231,130,166,12,169,217,95,109,50,38,194,9,208,144,64,7,136,150,165,191,76,189,246,182,80,251,142,211,107,199,80,204,170,189,129,197,87,7,23,209,119,174,211,213,60,60,69,183,138,48,30,182,82,22,176,97,162,39,184,203,51,204,206,241,192,186,189,27,27,70,183,168,191,241,20,182,98,171,130,48,147,122,64,123,248,187,139,180,246,63,214,111,20,156,123,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("3aa70af8-d87d-47b6-96a6-1b7d6c78bd6b"));
		}

		#endregion

	}

	#endregion

}

