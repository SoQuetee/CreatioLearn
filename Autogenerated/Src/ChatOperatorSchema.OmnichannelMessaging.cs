namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ChatOperatorSchema

	/// <exclude/>
	public class ChatOperatorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ChatOperatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ChatOperatorSchema(ChatOperatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("d4824517-fb06-74c8-eeb3-f54e87ff3606");
			Name = "ChatOperator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("01343ce8-0448-497f-b2c3-9511b4580fa3");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,165,85,77,111,218,64,16,61,19,41,255,97,148,94,130,84,153,158,75,64,66,70,141,144,18,37,21,36,151,170,135,197,30,204,74,203,154,238,7,17,69,252,247,206,238,218,128,13,114,93,122,177,236,245,155,55,111,231,83,178,21,234,53,75,16,102,168,20,211,249,194,68,113,46,23,60,179,138,25,158,203,232,101,37,121,178,100,82,162,136,158,81,107,150,113,153,193,237,205,238,246,166,99,181,123,159,110,181,193,85,191,246,77,52,66,96,226,56,116,244,136,18,21,79,8,67,168,79,10,51,58,133,88,48,173,191,66,188,100,230,101,141,228,46,87,254,255,143,41,97,153,224,191,217,92,224,79,58,88,219,185,224,9,36,14,95,131,119,118,222,228,192,249,141,163,72,137,244,213,155,132,127,189,94,15,30,180,93,173,152,218,14,203,131,32,18,172,70,5,60,69,105,248,130,163,138,14,248,222,169,65,33,64,33,75,115,41,182,240,104,121,10,111,100,58,73,251,133,127,148,105,144,80,213,67,177,212,70,217,132,196,214,84,21,156,167,215,185,247,188,214,243,118,193,5,184,211,9,94,96,80,28,187,40,119,246,205,62,95,85,78,132,134,99,155,56,148,190,65,27,102,240,120,127,141,200,132,206,33,81,184,24,220,149,168,169,3,221,245,134,141,97,170,128,33,60,119,144,161,233,131,118,143,61,221,70,226,71,13,183,3,127,95,127,215,147,154,59,148,156,143,164,142,42,70,209,68,50,170,176,13,189,164,159,189,121,156,167,120,21,129,51,12,20,37,96,180,97,92,184,18,188,138,239,140,197,39,174,223,144,137,137,134,188,76,70,32,129,133,96,89,115,73,206,243,92,192,40,160,7,195,16,236,115,223,77,110,15,5,144,88,165,168,15,200,119,130,107,131,41,208,133,141,134,36,183,210,52,139,224,100,21,52,184,106,214,177,179,56,203,248,151,86,34,82,174,104,102,28,156,31,59,83,55,75,120,226,218,60,184,246,25,194,184,160,240,90,46,22,222,17,124,223,253,167,208,212,212,181,12,77,69,80,17,28,95,105,164,172,120,235,40,52,86,201,42,52,242,88,223,241,174,229,15,125,127,81,235,19,211,6,12,95,33,124,44,81,158,86,210,73,54,225,158,75,120,155,197,221,70,205,99,170,161,153,99,114,156,78,201,168,224,24,95,234,228,18,29,61,115,249,206,132,109,87,108,69,129,23,61,5,191,44,90,188,46,221,78,224,247,96,222,50,215,181,185,25,162,90,59,172,237,168,74,147,183,88,82,181,209,246,31,243,57,48,180,221,80,126,129,208,8,173,68,226,175,236,9,205,190,102,94,218,97,110,179,251,233,218,150,187,50,207,54,20,42,63,75,169,0,205,146,235,176,110,218,14,184,243,145,124,65,68,139,180,238,255,0,238,236,49,38,239,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("d4824517-fb06-74c8-eeb3-f54e87ff3606"));
		}

		#endregion

	}

	#endregion

}

