namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastColumnSettingModelsSchema

	/// <exclude/>
	public class ForecastColumnSettingModelsSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastColumnSettingModelsSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastColumnSettingModelsSchema(ForecastColumnSettingModelsSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("caf2a486-8320-4af0-9da3-4fa7ddc482cf");
			Name = "ForecastColumnSettingModels";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,173,87,77,111,26,49,16,189,71,202,127,24,165,151,246,2,82,143,77,148,67,73,160,244,208,162,208,228,18,245,96,214,179,196,149,215,166,254,72,133,162,252,247,142,215,11,187,124,131,89,46,65,222,247,102,222,188,241,44,19,197,10,180,51,150,33,252,66,99,152,213,185,235,244,180,202,197,212,27,230,132,86,157,190,54,152,49,235,158,62,95,94,188,93,94,0,125,188,21,106,10,227,185,117,88,92,111,30,81,0,41,49,11,108,219,25,160,66,35,178,21,216,15,252,231,232,89,200,245,221,106,69,207,226,211,15,6,167,68,130,158,100,214,126,129,175,204,34,133,242,133,26,163,115,68,92,224,186,221,46,220,88,95,20,204,204,111,235,163,128,135,44,112,33,215,6,152,148,144,149,116,176,145,223,105,208,187,171,252,153,159,72,145,85,236,45,137,3,166,170,126,135,130,197,241,29,230,66,161,133,87,97,197,68,72,225,230,160,115,200,13,43,13,97,18,102,204,184,112,84,105,123,101,210,99,103,45,116,119,51,246,115,176,106,100,244,12,141,155,127,188,18,182,191,12,57,162,136,223,4,231,168,174,62,253,174,25,85,77,19,173,37,12,183,194,225,13,166,232,174,131,63,215,240,30,153,239,203,110,160,226,177,33,59,250,115,74,111,30,112,102,208,162,114,118,173,39,246,112,83,130,97,130,140,139,205,89,201,186,245,146,28,223,171,71,37,254,122,4,65,86,56,145,11,52,101,95,152,204,188,100,14,57,132,99,55,63,189,57,86,123,147,225,227,144,111,235,199,192,11,14,227,5,98,189,5,233,186,13,230,104,80,209,40,71,135,79,151,77,17,162,149,123,132,63,212,152,36,233,3,164,43,64,211,105,195,95,247,130,27,178,169,221,238,229,12,237,35,162,111,83,111,157,9,239,158,135,38,174,61,243,73,133,208,60,217,249,72,63,104,254,104,5,150,164,190,44,187,93,193,7,28,31,173,65,147,100,247,133,116,228,52,103,142,193,31,82,82,5,63,93,120,94,6,218,35,55,102,186,11,137,90,187,29,141,87,74,238,85,249,26,78,118,62,4,56,120,81,250,13,80,59,99,186,166,59,113,74,107,241,7,46,77,127,5,152,84,66,175,50,61,136,110,168,231,9,63,182,81,54,199,131,130,57,182,227,54,229,205,232,2,65,16,16,43,40,191,41,158,52,169,33,212,207,200,223,63,167,13,224,121,171,1,45,141,5,121,127,220,110,80,129,79,221,210,86,115,156,185,9,108,222,247,74,84,226,122,86,210,182,153,61,188,87,190,32,135,39,18,111,170,10,134,180,51,223,194,83,96,156,127,123,42,200,185,250,43,192,211,174,50,118,215,49,110,48,219,25,6,111,235,118,8,85,87,40,89,194,251,159,130,13,85,165,113,231,182,252,216,0,157,55,8,247,92,184,224,209,113,147,176,64,159,190,35,199,145,88,203,214,230,76,8,11,83,163,253,12,144,114,36,122,47,236,32,132,8,42,247,252,163,178,196,28,237,252,251,127,236,157,195,149,198,14,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("caf2a486-8320-4af0-9da3-4fa7ddc482cf"));
		}

		#endregion

	}

	#endregion

}

