namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastDataIteratorSchema

	/// <exclude/>
	public class ForecastDataIteratorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastDataIteratorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastDataIteratorSchema(ForecastDataIteratorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("21b3dfe6-f171-80f3-2d69-1b482f22f3f9");
			Name = "ForecastDataIterator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,213,87,91,111,219,54,20,126,118,129,254,7,34,123,145,48,67,201,246,152,88,14,178,180,73,13,164,107,144,108,123,41,138,129,145,142,45,34,18,229,145,148,3,163,240,127,223,225,205,162,100,217,49,210,189,236,197,16,201,115,255,206,205,156,86,32,151,52,3,242,7,8,65,101,61,87,201,117,205,231,108,209,8,170,88,205,147,155,90,64,70,165,250,235,215,247,239,190,191,127,55,106,36,227,11,242,184,150,10,170,139,222,25,89,203,18,50,205,39,147,91,224,32,88,182,67,115,199,248,63,237,101,168,182,170,106,62,252,34,96,223,125,114,67,51,85,11,6,18,41,144,230,39,1,11,84,79,102,92,129,152,163,99,231,100,230,93,248,64,21,157,225,53,69,6,67,124,122,122,74,38,178,169,42,42,214,83,119,246,196,36,71,106,194,28,121,226,169,79,3,242,101,243,84,178,140,48,175,106,159,166,145,142,219,142,50,115,97,137,64,18,85,136,186,89,20,132,150,37,17,245,139,36,245,156,200,37,100,108,206,32,39,115,39,55,217,10,58,237,75,154,44,169,160,21,225,8,104,122,34,11,0,117,50,221,250,98,206,201,228,212,208,12,179,152,111,64,115,228,201,244,126,251,221,225,89,213,44,247,22,63,160,141,209,163,22,107,133,143,201,144,239,70,144,36,173,236,88,227,184,177,72,1,207,45,88,29,224,174,75,42,229,249,1,105,175,34,23,178,4,170,15,65,152,105,165,7,117,106,12,117,12,188,153,247,162,94,130,80,152,119,231,228,222,8,177,239,131,40,223,52,220,20,5,162,76,21,89,138,58,3,41,17,116,15,171,65,124,15,182,206,194,43,35,96,50,251,200,155,10,45,123,42,97,114,219,176,124,58,37,26,9,111,237,13,39,223,201,2,212,5,145,250,103,243,35,54,45,48,33,151,63,100,217,173,150,240,70,243,174,170,186,225,74,87,129,169,6,85,147,39,8,172,68,147,41,81,172,130,195,182,97,105,234,248,92,27,89,29,213,36,37,191,156,157,93,56,80,187,169,248,214,252,124,99,79,121,4,221,51,131,200,27,42,227,54,229,185,35,15,90,4,67,10,182,98,57,246,133,167,181,37,206,138,134,63,15,103,248,215,15,48,167,77,169,126,99,60,199,246,25,169,245,18,234,121,52,216,170,226,248,219,49,53,65,246,246,212,126,149,220,48,40,115,93,33,130,173,208,7,251,184,180,135,86,198,39,134,252,34,43,214,8,149,150,247,0,203,90,50,20,184,38,127,235,48,180,231,97,188,90,108,112,238,40,209,232,129,208,43,75,231,211,144,213,209,159,18,4,114,114,59,184,72,211,57,198,196,52,239,81,143,40,237,145,233,182,230,242,102,175,117,157,150,33,106,133,156,144,251,144,184,35,9,203,104,27,151,71,80,10,177,67,139,171,41,217,222,14,213,82,43,200,246,102,251,123,144,176,231,89,239,56,192,122,148,127,187,177,63,6,238,35,72,44,28,11,237,149,249,26,9,80,141,224,253,76,33,151,151,36,234,223,165,182,122,237,202,176,198,13,69,77,142,176,106,26,89,69,35,14,47,97,138,93,137,5,66,197,85,116,210,205,133,147,113,47,136,113,108,198,158,73,16,252,149,6,145,93,219,86,180,108,192,68,249,213,84,250,12,170,168,247,22,150,157,211,168,93,132,195,250,168,249,60,38,59,125,92,191,162,151,40,99,150,75,52,147,55,101,233,171,226,169,174,75,82,80,249,25,101,107,185,248,60,167,165,4,235,110,143,177,115,68,120,116,56,239,152,84,86,77,228,98,196,76,215,159,235,32,165,228,172,189,203,76,15,79,195,129,238,59,123,75,84,120,16,239,96,5,101,79,103,98,136,189,30,68,81,111,147,165,94,109,117,224,145,216,94,37,31,171,165,90,91,162,188,246,89,182,162,194,182,228,244,136,36,213,153,21,190,186,77,105,220,214,238,216,120,127,79,23,160,3,109,55,110,175,106,180,157,88,169,245,122,220,222,203,47,62,52,54,70,254,233,83,223,241,110,36,118,200,204,84,206,123,1,242,84,179,5,71,23,31,216,162,80,218,95,76,119,240,79,119,65,184,182,161,179,111,27,23,88,19,42,253,166,117,120,63,204,26,209,137,255,200,129,252,115,218,37,118,175,221,164,234,137,115,113,113,164,33,132,70,143,54,242,139,112,115,47,138,47,19,243,234,168,217,156,68,59,226,206,226,109,240,109,59,113,196,155,14,248,54,141,141,10,59,179,35,252,38,233,84,95,37,15,144,213,34,159,229,113,160,103,38,181,41,6,129,168,11,72,220,42,236,38,116,176,43,93,38,51,190,170,159,33,178,170,189,224,13,1,172,176,33,246,129,125,107,143,140,145,222,53,104,86,144,72,215,158,182,31,87,37,231,98,107,217,104,167,135,132,141,162,87,90,60,163,42,194,164,254,250,13,155,155,22,184,137,183,218,54,97,52,55,228,165,96,37,144,40,128,56,14,231,167,111,99,166,185,132,33,220,173,112,111,171,155,1,253,242,79,219,130,235,36,223,209,221,245,181,197,254,127,245,247,205,205,225,255,226,95,156,11,187,181,235,186,128,236,217,15,195,223,113,58,68,218,36,220,49,205,179,207,130,32,79,247,50,4,26,28,151,181,45,181,214,217,171,118,255,113,215,157,110,171,119,36,233,123,204,129,252,61,148,8,67,251,63,222,253,11,222,122,184,135,44,17,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("21b3dfe6-f171-80f3-2d69-1b482f22f3f9"));
		}

		#endregion

	}

	#endregion

}

