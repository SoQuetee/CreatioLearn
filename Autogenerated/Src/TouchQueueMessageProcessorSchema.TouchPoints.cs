namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: TouchQueueMessageProcessorSchema

	/// <exclude/>
	public class TouchQueueMessageProcessorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TouchQueueMessageProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TouchQueueMessageProcessorSchema(TouchQueueMessageProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("df156054-a09a-4b76-826d-896d4920eed5");
			Name = "TouchQueueMessageProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("d23d224d-d671-416d-91d0-80132a374d7a");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,157,86,77,111,218,64,16,61,19,41,255,97,68,47,206,5,238,225,35,74,17,170,34,37,105,170,166,231,104,49,131,89,117,189,75,119,215,180,52,226,191,119,246,195,6,27,12,164,23,176,103,103,222,140,223,155,25,91,178,28,205,138,165,8,175,168,53,51,106,97,123,19,37,23,60,43,52,179,92,201,235,171,247,235,171,78,97,184,204,224,251,198,88,204,233,92,8,76,221,161,233,125,65,137,154,167,131,202,103,31,38,207,149,60,126,162,113,103,207,132,154,49,113,123,27,252,123,143,42,203,200,76,231,228,241,73,99,70,121,96,34,152,49,183,240,170,138,116,249,173,192,2,159,208,24,150,225,139,86,41,93,41,237,189,251,253,62,12,77,145,231,76,111,198,241,62,122,160,1,38,4,228,33,204,192,66,171,156,124,17,33,213,184,24,117,119,200,221,254,184,87,98,245,247,192,86,197,76,240,20,82,87,201,201,66,58,239,190,152,93,237,196,147,213,69,106,149,166,71,120,241,48,193,163,89,175,55,60,72,110,57,19,252,47,85,41,241,55,112,138,102,146,4,82,11,176,75,12,5,244,170,240,126,51,126,184,98,154,229,32,73,216,81,183,48,168,41,191,12,114,117,199,63,232,30,210,202,80,129,247,134,125,31,230,81,226,147,182,63,99,242,163,6,11,245,44,55,224,58,166,211,105,56,141,26,110,174,1,58,219,72,21,202,121,96,171,78,29,101,92,161,182,28,29,113,154,175,153,197,224,176,10,55,240,48,149,69,142,154,205,4,14,63,51,131,237,53,143,225,45,111,152,204,100,201,184,28,252,63,98,211,18,0,97,228,89,236,180,228,131,187,59,72,218,206,70,240,168,216,28,53,205,149,221,157,37,55,55,131,15,16,117,174,195,238,229,65,83,237,77,66,93,54,154,134,147,29,23,123,101,205,181,45,152,128,134,230,141,219,119,200,208,14,192,184,159,237,137,2,221,10,32,14,90,50,150,66,145,23,188,9,239,58,216,43,197,219,3,66,108,68,74,74,154,148,190,129,255,120,237,248,206,158,152,100,89,224,60,196,37,97,29,188,40,46,173,233,122,242,9,198,212,97,70,176,102,162,192,253,54,190,132,237,163,59,39,54,210,179,178,124,193,81,87,164,131,85,32,157,113,3,108,166,10,11,171,208,19,180,31,207,176,211,138,13,111,182,58,42,109,131,83,83,95,5,86,23,117,86,15,225,2,195,71,236,35,191,208,90,51,52,214,74,147,247,163,128,151,105,240,112,161,0,213,200,133,41,116,58,144,2,238,73,221,203,131,173,25,23,110,49,148,175,145,82,14,26,209,143,202,209,200,228,186,202,253,7,37,180,178,68,1,206,171,177,58,27,30,255,154,253,238,141,177,223,253,117,139,2,13,184,51,66,84,88,7,228,183,173,167,39,180,75,53,111,91,226,107,197,231,36,145,69,45,153,136,165,36,7,53,150,164,151,175,151,5,125,68,176,116,9,201,154,233,157,16,52,107,45,107,185,140,235,240,5,36,149,127,111,194,100,116,140,97,73,153,167,10,232,236,188,203,234,74,159,65,244,208,104,11,45,227,221,214,255,109,63,196,203,185,157,253,170,105,183,187,102,140,181,128,159,6,248,229,8,42,153,185,244,163,32,186,119,199,45,99,49,93,163,180,251,212,187,79,162,253,15,4,143,136,127,82,92,249,181,30,162,238,117,70,47,78,105,159,11,33,190,234,105,190,178,155,105,233,226,82,65,74,111,83,159,201,3,81,76,163,28,26,54,78,159,60,20,78,201,42,244,99,111,25,223,48,23,55,74,201,206,100,137,233,207,253,42,147,42,117,212,177,217,131,53,149,143,75,25,172,117,35,217,254,1,88,147,190,178,87,11,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("df156054-a09a-4b76-826d-896d4920eed5"));
		}

		#endregion

	}

	#endregion

}

