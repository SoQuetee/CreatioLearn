namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastGroupSummaryRepositorySchema

	/// <exclude/>
	public class ForecastGroupSummaryRepositorySchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastGroupSummaryRepositorySchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastGroupSummaryRepositorySchema(ForecastGroupSummaryRepositorySchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("2dfdff3f-28f6-4076-b72f-116a96a6cf01");
			Name = "ForecastGroupSummaryRepository";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,157,86,77,111,227,54,16,61,123,129,253,15,132,219,131,140,26,58,236,113,243,133,52,181,93,3,233,110,26,167,233,161,40,10,70,26,219,44,36,82,33,169,44,12,195,255,189,195,15,201,164,100,59,238,94,108,144,154,121,243,102,248,102,72,78,75,80,21,205,128,60,129,148,84,137,165,78,239,4,95,178,85,45,169,102,130,167,83,33,33,163,74,63,127,250,248,97,251,241,195,160,86,140,175,200,98,163,52,148,23,157,53,186,22,5,100,198,79,165,51,224,32,89,214,179,185,103,252,117,191,25,134,45,75,193,15,127,145,112,108,63,157,112,205,52,3,117,212,96,74,51,45,164,179,64,155,31,36,172,144,31,185,43,168,82,159,73,147,222,76,138,186,90,212,101,73,229,230,17,42,161,24,58,109,172,199,95,191,192,146,214,133,254,153,241,28,241,19,189,169,64,44,147,121,227,218,243,122,254,52,26,147,47,88,89,114,69,134,22,120,56,250,27,129,170,250,165,96,25,201,76,228,119,2,147,61,179,3,164,6,91,75,172,205,101,202,160,200,49,153,7,201,222,168,6,247,177,114,11,98,11,180,89,100,107,40,233,239,53,200,13,30,82,93,114,242,207,202,68,118,139,11,143,7,60,119,144,49,62,42,66,105,89,155,58,154,40,54,13,31,196,165,116,58,153,228,15,5,18,49,184,147,6,169,163,229,152,204,31,80,40,34,15,178,175,58,27,99,19,107,208,86,220,145,14,236,179,206,198,200,218,127,38,47,84,65,210,13,215,3,239,187,147,45,217,157,46,201,111,160,215,226,252,154,79,89,161,13,139,166,61,200,12,244,68,189,250,82,217,178,57,147,164,177,52,61,72,150,193,194,213,96,16,66,251,147,148,176,4,9,60,3,183,30,247,195,19,80,175,152,148,69,192,147,52,93,210,58,57,179,217,94,12,94,185,63,14,183,29,224,212,124,217,165,219,144,85,26,56,62,80,189,222,13,47,108,148,80,93,8,134,241,211,219,60,119,235,228,116,236,145,67,120,163,18,73,102,66,230,10,1,162,152,143,118,123,158,171,155,244,73,220,51,165,147,17,185,185,33,28,190,17,179,186,156,213,44,191,78,250,56,54,16,130,25,195,119,143,40,49,53,219,67,56,2,223,139,16,18,72,239,197,138,101,180,248,138,66,180,51,22,241,186,91,11,60,164,76,167,95,165,115,15,130,255,15,239,91,158,59,119,182,36,137,103,96,166,187,166,140,171,196,20,41,157,148,149,222,140,26,105,52,52,177,192,165,120,131,208,228,34,50,112,76,240,64,77,138,233,157,4,20,253,92,125,169,139,194,171,248,157,19,246,112,187,30,59,4,17,218,70,76,122,172,14,5,117,225,254,100,122,253,64,37,34,227,66,181,45,84,86,84,50,37,248,19,14,236,116,242,90,211,194,247,208,224,52,189,49,105,139,133,195,230,82,188,252,139,231,137,122,66,177,221,226,213,98,168,69,9,132,167,99,232,133,124,189,33,110,255,202,240,116,100,182,246,50,73,162,222,238,247,112,168,29,93,75,30,105,216,126,216,197,51,231,77,176,156,28,136,115,124,160,144,51,102,73,127,232,244,6,74,212,154,109,244,27,243,114,152,208,108,157,172,155,173,57,94,255,228,234,186,57,86,63,136,162,207,251,65,114,114,2,69,62,105,127,250,88,77,237,213,235,14,95,197,76,210,103,90,212,176,87,217,192,168,202,21,75,157,146,246,17,190,141,36,6,59,2,133,130,51,80,191,83,187,131,35,4,14,127,111,178,108,200,57,217,142,66,1,157,113,197,9,141,29,0,121,35,56,191,36,56,35,164,100,57,62,30,233,75,1,119,80,20,230,37,80,182,171,169,20,165,147,78,226,254,8,67,74,77,197,205,84,205,140,207,149,189,167,211,99,174,214,199,241,55,230,237,244,71,63,243,9,31,154,218,84,201,95,46,54,95,127,3,132,151,144,149,14,249,137,12,231,249,48,110,44,3,26,55,84,47,191,190,254,49,168,191,188,241,26,79,22,107,0,77,148,249,197,231,204,132,215,37,30,1,102,114,233,94,54,215,254,205,161,230,124,41,252,91,38,48,138,159,53,215,109,147,154,149,26,147,163,13,28,22,18,101,213,212,49,166,230,73,133,4,186,1,34,76,87,154,247,39,3,70,179,208,38,156,179,126,140,13,58,175,190,3,192,7,47,77,167,211,248,182,61,250,88,58,123,134,118,187,48,192,143,197,128,134,39,122,195,237,198,155,184,247,31,173,225,83,15,70,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("2dfdff3f-28f6-4076-b72f-116a96a6cf01"));
		}

		#endregion

	}

	#endregion

}

