namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecasCellSnapshotServiceSchema

	/// <exclude/>
	public class ForecasCellSnapshotServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecasCellSnapshotServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecasCellSnapshotServiceSchema(ForecasCellSnapshotServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("0a4e18d5-1a74-0dac-6ca8-5600330c0b01");
			Name = "ForecasCellSnapshotService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,181,87,81,143,219,54,12,126,78,129,254,7,46,3,10,7,8,124,192,30,155,75,138,91,174,105,3,116,221,97,217,238,101,24,10,157,77,39,198,28,57,147,228,20,193,53,255,125,148,37,217,178,99,59,59,108,123,185,139,104,146,162,190,143,164,40,206,246,40,15,44,66,248,21,133,96,50,79,84,184,204,121,146,110,11,193,84,154,243,112,149,11,140,152,84,143,63,188,126,245,252,250,213,168,144,41,223,194,230,36,21,238,73,53,203,48,210,122,50,252,128,28,69,26,205,218,58,159,82,254,87,45,244,183,217,239,115,222,253,69,96,159,60,92,177,72,229,34,69,73,26,164,243,189,192,45,109,15,203,140,73,249,22,108,180,75,204,178,247,92,165,234,180,225,236,32,119,185,218,160,56,166,17,150,54,55,55,55,112,43,139,253,158,137,211,194,174,237,119,72,114,1,146,29,245,198,210,154,150,178,196,194,0,17,185,150,161,243,114,227,185,249,253,30,19,86,100,234,199,148,199,100,31,168,211,1,243,36,88,59,4,59,3,154,76,225,51,113,0,115,24,235,160,229,120,242,7,185,58,20,79,89,26,65,164,15,229,159,169,101,12,111,97,216,59,185,122,46,143,92,225,180,74,49,139,9,168,7,145,30,153,50,120,140,14,102,1,235,15,168,156,63,189,221,47,120,200,101,74,112,159,224,11,193,94,48,79,50,107,24,174,185,68,209,107,187,75,165,230,44,98,153,209,235,243,50,176,125,237,162,207,216,89,110,12,35,148,154,197,158,47,89,22,21,25,35,109,248,34,187,63,204,44,64,200,99,131,145,197,196,80,208,15,126,240,27,29,133,106,133,155,2,128,162,177,156,128,46,150,209,168,165,52,111,169,149,71,56,55,41,122,16,249,129,64,162,20,215,52,229,138,52,49,118,68,217,37,180,252,182,150,207,176,69,53,3,169,255,156,219,166,21,80,246,60,247,76,49,112,139,46,211,54,52,157,129,150,112,181,183,186,74,74,159,220,128,71,145,216,95,35,129,170,16,188,151,68,120,247,206,232,141,130,94,149,185,105,18,166,129,156,168,95,169,219,107,241,45,130,201,164,164,72,115,68,127,101,29,208,192,54,71,150,21,232,153,157,27,25,53,144,229,119,101,141,149,125,192,147,246,98,209,46,73,2,1,130,75,105,215,185,123,99,88,4,99,19,197,120,106,1,229,248,21,40,181,164,18,133,118,112,39,182,197,30,185,10,198,205,76,30,79,91,73,56,233,128,174,35,102,7,23,188,12,170,143,85,63,32,157,171,136,165,9,1,211,213,66,96,62,7,94,100,153,43,87,226,181,91,237,133,24,154,240,78,21,136,255,2,197,89,149,216,157,145,49,9,107,87,188,147,112,131,141,178,14,170,47,214,203,185,153,65,189,93,181,73,90,15,36,3,196,13,222,7,31,91,215,193,75,233,107,95,34,131,36,94,42,119,80,57,20,238,255,207,230,69,136,255,17,167,157,151,109,31,179,29,56,117,240,219,119,21,252,132,106,151,247,206,21,26,80,154,60,120,172,127,4,235,247,156,208,18,236,41,195,91,45,88,64,29,69,153,10,83,99,192,170,110,232,136,181,71,108,169,135,171,84,72,245,179,176,227,87,160,39,52,152,47,12,42,122,17,62,208,96,154,199,235,88,39,74,237,181,22,191,121,227,41,155,134,126,161,92,137,27,202,102,234,186,80,118,226,137,127,191,59,52,238,211,36,177,7,167,228,211,171,14,72,106,103,4,199,85,196,28,64,71,38,32,218,49,190,197,18,106,73,36,234,84,253,68,218,198,48,176,73,163,199,89,22,237,32,104,33,13,41,247,183,174,42,234,41,207,51,231,153,156,38,44,147,246,134,43,247,52,225,156,74,15,243,154,233,11,94,61,74,103,117,105,55,172,219,165,220,116,93,59,112,133,84,7,69,197,136,205,146,168,191,185,95,223,190,249,177,134,143,58,195,225,187,6,119,143,245,237,93,70,103,77,235,136,124,128,195,187,56,14,46,79,117,246,42,77,227,19,19,201,150,11,143,125,235,112,73,84,40,63,202,210,179,241,48,243,243,94,123,153,189,168,24,189,161,172,253,232,49,175,30,118,68,217,122,219,212,239,158,60,41,183,68,129,156,222,26,79,168,190,34,186,244,0,198,99,200,180,81,165,94,189,140,46,159,70,70,114,96,130,237,129,211,115,103,62,118,86,227,69,53,121,238,81,177,152,26,92,120,123,83,106,118,27,38,105,166,80,140,23,171,242,63,68,141,199,170,111,105,175,162,99,158,198,229,57,221,62,65,231,252,235,226,153,130,113,108,30,193,96,118,115,220,59,165,112,185,195,232,79,215,245,63,83,190,6,58,56,122,236,57,13,215,232,43,139,205,14,241,31,216,25,61,103,93,65,51,175,226,155,85,57,37,181,166,247,197,152,214,223,35,219,0,58,135,202,208,77,77,65,233,102,234,14,90,155,183,106,151,28,13,141,92,215,253,233,76,114,158,92,219,139,76,87,104,55,51,99,116,101,74,8,61,169,219,180,218,35,180,53,53,25,40,23,35,109,10,73,246,55,98,171,217,162,18,17,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("0a4e18d5-1a74-0dac-6ca8-5600330c0b01"));
		}

		#endregion

	}

	#endregion

}

