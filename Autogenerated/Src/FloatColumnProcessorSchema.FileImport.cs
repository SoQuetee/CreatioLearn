namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: FloatColumnProcessorSchema

	/// <exclude/>
	public class FloatColumnProcessorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public FloatColumnProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public FloatColumnProcessorSchema(FloatColumnProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("30a1a7ef-6525-497b-a8c9-487797a70be1");
			Name = "FloatColumnProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("bdeb1980-c322-4103-af7f-58bfe7162080");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,189,84,77,111,26,49,16,61,19,41,255,97,74,47,32,33,115,39,64,213,146,18,113,104,132,2,233,37,202,193,236,206,18,75,94,123,229,15,20,138,242,223,59,182,151,132,221,208,92,90,53,7,178,30,191,121,243,230,203,138,151,104,43,158,33,172,209,24,110,117,225,216,76,171,66,108,189,225,78,104,197,230,66,226,162,172,180,113,151,23,135,203,139,142,183,66,109,97,181,183,14,203,171,214,153,221,72,189,225,82,252,138,174,239,110,215,248,236,216,29,110,189,228,230,251,115,101,208,90,130,217,55,220,169,6,131,127,178,179,57,207,156,54,2,131,39,97,62,27,220,18,15,204,36,183,118,4,115,169,185,155,105,233,75,181,52,58,163,32,218,68,220,112,56,132,177,80,79,104,132,203,117,6,153,193,98,210,189,213,106,137,198,10,82,168,218,110,135,245,29,90,47,221,75,119,56,61,18,88,95,150,220,236,143,103,248,170,64,40,235,184,162,26,234,2,220,147,176,144,5,37,64,31,148,98,69,25,138,141,68,40,180,129,42,49,135,156,162,76,200,98,64,216,113,233,209,178,99,140,225,73,144,135,107,44,56,105,248,38,84,78,126,61,183,175,80,23,189,69,75,106,127,0,183,212,75,152,128,162,127,4,56,87,134,126,255,145,24,43,191,145,34,171,69,158,131,193,8,62,170,202,56,199,76,148,92,126,153,14,160,45,131,232,15,177,216,111,93,161,252,157,241,161,99,212,156,101,140,157,16,127,221,143,119,13,73,29,161,191,153,65,238,208,54,59,67,133,35,52,98,29,232,92,230,196,203,94,137,135,109,230,113,197,13,47,99,129,39,93,111,209,80,110,10,179,48,235,221,233,61,157,169,157,71,3,27,15,35,58,58,215,21,63,23,177,119,223,224,129,38,109,63,120,119,70,176,225,22,123,173,43,56,192,75,93,106,84,121,170,118,179,244,20,164,66,227,104,81,70,225,219,145,35,230,255,170,246,213,145,16,244,142,214,83,228,8,55,94,228,112,205,29,255,25,198,121,77,245,190,95,228,48,153,54,109,44,150,161,13,187,250,56,149,31,232,158,116,254,159,242,56,206,119,152,93,178,185,168,179,151,30,193,196,22,45,245,242,198,111,234,70,108,85,104,20,107,184,157,130,174,34,102,70,209,189,193,133,42,52,100,222,152,160,49,153,104,123,155,227,192,102,233,62,88,89,13,74,36,180,83,225,21,201,146,109,85,145,228,66,100,73,215,4,232,145,197,103,122,106,43,73,79,251,169,4,22,127,7,208,125,24,176,199,238,32,82,117,154,34,216,173,47,55,104,230,218,148,220,213,135,235,84,145,21,134,153,166,77,174,51,17,5,244,62,229,154,166,27,217,218,236,151,220,208,152,158,147,52,0,237,29,36,100,122,236,136,126,197,119,216,79,19,222,49,72,62,10,148,151,50,81,239,120,220,166,80,71,204,143,105,245,234,206,244,79,41,18,190,38,104,186,196,171,243,75,146,172,77,35,217,126,3,166,206,95,164,16,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("30a1a7ef-6525-497b-a8c9-487797a70be1"));
		}

		#endregion

	}

	#endregion

}

