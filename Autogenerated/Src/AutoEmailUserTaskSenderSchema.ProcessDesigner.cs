namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: AutoEmailUserTaskSenderSchema

	/// <exclude/>
	public class AutoEmailUserTaskSenderSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public AutoEmailUserTaskSenderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public AutoEmailUserTaskSenderSchema(AutoEmailUserTaskSenderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("8b81a07e-f5a5-43a1-b7b8-6c4fdaced4b6");
			Name = "AutoEmailUserTaskSender";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("da7de29a-d2b3-4248-bf8e-b7a592dc81f6");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,197,88,91,111,219,54,20,126,78,129,254,7,78,3,10,25,48,20,108,47,27,226,216,67,234,56,155,129,230,130,36,93,31,138,98,160,37,198,225,42,137,6,73,57,113,187,252,247,29,222,100,138,166,227,184,125,232,75,98,81,231,242,157,251,161,106,92,17,177,192,57,65,183,132,115,44,216,157,204,198,140,147,236,138,179,156,8,1,15,245,29,157,55,28,75,202,234,215,175,190,190,126,117,208,8,90,207,209,205,74,72,82,13,218,231,121,201,102,184,60,58,26,179,170,98,117,246,142,205,231,112,188,126,239,203,87,20,241,55,158,178,157,4,14,227,41,17,116,94,19,30,103,0,91,38,181,164,146,18,177,149,224,12,231,146,241,45,20,231,152,150,219,206,179,27,82,23,190,102,240,202,13,145,18,126,10,52,12,213,116,209,123,164,192,15,18,126,230,100,14,47,208,184,196,66,28,161,147,70,178,73,5,74,222,11,194,111,177,248,108,116,105,210,69,51,43,105,142,114,69,185,141,16,29,161,105,148,255,224,171,150,209,234,59,163,164,44,64,225,21,167,75,44,137,121,185,48,15,72,72,64,155,35,78,112,193,234,114,133,166,16,88,244,79,9,127,134,8,126,158,227,26,207,9,207,254,36,82,69,156,240,52,177,81,73,122,3,171,6,212,26,77,93,181,64,183,32,92,197,101,139,234,119,44,199,37,253,130,103,37,185,145,92,121,247,130,93,147,156,44,40,169,229,132,115,198,209,112,164,24,14,106,242,176,73,157,2,166,107,34,88,195,115,56,97,28,112,166,189,62,74,182,184,43,233,107,81,7,201,134,32,145,133,122,179,191,113,217,144,164,151,221,50,171,107,47,99,117,240,172,173,38,144,10,10,100,71,77,114,149,26,225,227,87,141,108,78,228,64,255,16,246,199,147,17,113,120,120,136,142,105,125,79,56,149,5,203,209,225,200,19,60,99,172,68,23,132,20,74,228,180,150,132,99,35,115,56,66,119,184,20,100,7,238,115,34,239,217,214,228,152,6,254,69,49,151,91,248,156,200,134,135,166,101,31,24,255,172,251,79,22,240,249,22,238,4,167,13,171,113,233,57,68,52,85,133,249,106,228,14,198,144,193,146,8,120,65,8,202,57,185,27,38,39,0,97,73,229,74,39,131,77,130,195,17,162,53,228,124,13,136,90,89,135,161,176,227,5,230,184,66,53,52,207,97,66,20,251,184,84,201,97,250,200,42,25,105,145,80,158,234,16,252,172,79,179,227,67,205,102,194,195,153,4,23,144,2,45,41,151,13,46,81,4,141,5,29,121,147,78,54,148,162,77,28,129,235,85,149,196,100,109,50,246,131,48,245,246,138,70,36,191,157,145,75,70,11,164,212,106,253,31,168,188,63,37,119,184,41,165,111,214,57,116,15,149,76,196,123,232,155,76,134,62,15,141,84,215,160,112,214,45,49,71,77,7,238,9,87,221,73,153,11,103,66,242,70,25,5,135,77,5,38,166,73,151,56,137,27,171,197,110,122,6,228,234,246,108,31,85,223,59,222,140,197,40,221,0,100,165,210,59,148,254,20,212,0,200,152,138,51,136,116,3,166,213,170,239,20,105,114,89,26,31,169,212,158,155,137,145,244,208,155,55,200,116,169,131,189,132,40,239,38,61,231,48,109,154,48,25,54,252,238,172,80,253,72,49,232,81,152,118,99,6,174,39,150,234,9,17,232,54,62,2,40,194,2,132,83,232,66,22,134,154,168,99,239,212,18,31,252,197,132,4,146,84,232,94,219,243,6,167,50,91,247,226,180,11,13,218,252,77,37,23,138,49,233,217,198,126,112,197,184,18,67,107,153,93,97,46,72,250,114,65,138,181,211,238,91,161,64,126,35,74,133,78,37,232,30,216,76,144,128,55,241,101,241,11,232,41,223,100,171,99,238,138,187,130,92,125,96,188,248,102,145,78,64,210,51,82,159,108,208,37,212,130,139,79,188,84,118,84,97,164,109,246,99,61,108,16,42,129,60,211,137,187,81,135,83,47,125,71,145,252,5,221,253,205,78,209,42,88,11,143,165,178,151,173,142,227,9,229,88,230,247,40,157,60,194,114,160,167,42,105,107,236,64,237,72,153,238,84,41,105,117,232,242,143,53,49,229,209,123,206,30,28,225,147,85,97,106,199,235,190,254,92,159,60,146,188,145,36,237,174,121,22,50,108,28,75,170,74,188,234,62,247,145,93,208,12,55,164,1,184,67,146,71,137,114,243,223,65,210,66,111,73,181,40,97,6,57,225,218,127,250,199,48,20,156,117,80,12,214,50,92,63,183,244,17,78,136,158,79,153,122,205,210,146,66,233,101,83,113,209,148,229,37,159,84,11,185,74,215,237,76,145,57,88,217,52,234,92,59,1,85,63,26,248,158,53,78,215,73,218,6,49,13,183,61,215,193,54,48,157,113,86,1,170,16,207,51,243,173,114,233,20,199,107,177,109,160,125,106,39,82,190,89,74,226,71,207,186,24,38,43,216,27,218,215,116,126,175,177,166,173,127,110,87,11,210,107,61,209,57,70,195,33,234,28,100,106,109,95,167,69,203,213,93,145,54,99,240,94,93,203,220,235,232,80,115,162,250,168,141,142,143,56,58,191,90,241,223,35,209,223,205,218,88,63,117,55,108,237,192,51,2,109,102,242,72,133,244,109,121,190,62,251,136,53,18,233,155,239,10,225,192,61,238,89,101,14,148,84,196,173,78,203,180,136,36,184,197,236,238,15,173,45,86,27,9,144,130,150,96,89,49,132,55,249,61,120,207,187,65,78,237,230,253,118,165,6,89,218,46,232,110,246,216,96,27,238,52,154,201,161,238,12,168,78,138,138,214,109,250,121,168,117,55,222,224,208,222,86,165,125,250,54,230,143,190,145,176,219,27,158,147,67,29,131,151,132,94,239,202,183,124,181,206,181,93,17,63,49,87,59,181,143,157,216,57,110,143,88,109,239,203,58,222,14,186,55,195,215,60,105,155,240,207,76,183,216,112,211,222,220,209,135,45,142,63,178,105,189,100,159,219,70,223,29,126,145,161,231,187,100,75,105,191,232,70,212,71,59,124,104,16,196,198,86,231,6,98,11,217,218,21,187,186,17,239,247,240,153,139,220,214,141,71,185,51,94,248,221,18,215,189,59,32,89,39,103,39,127,214,140,112,43,31,142,124,140,118,229,9,228,244,117,186,4,221,203,197,108,221,184,87,117,14,225,171,233,23,50,102,224,88,34,205,231,6,245,178,5,173,38,84,120,168,24,47,117,106,173,119,253,147,237,85,227,246,218,107,82,177,37,121,7,47,237,38,168,42,200,189,244,192,92,169,219,54,128,225,122,197,21,150,208,230,88,180,173,219,6,150,235,104,21,30,148,45,227,198,118,162,54,67,76,103,24,124,139,235,3,157,219,70,135,51,211,72,89,183,167,162,229,180,33,0,167,58,15,133,178,123,157,1,180,174,88,17,136,32,133,117,217,214,238,20,180,166,31,83,125,254,197,96,125,165,253,75,86,165,47,104,223,91,237,126,209,139,7,171,243,217,196,95,220,157,131,219,21,124,87,107,55,142,57,107,234,252,152,205,254,5,160,31,63,25,143,140,160,75,151,229,91,44,64,183,254,186,36,144,35,48,207,42,255,69,240,33,200,177,164,30,69,4,170,14,241,88,13,228,114,79,160,102,146,180,80,247,3,249,66,116,230,54,171,190,56,90,112,172,62,197,18,239,0,24,120,194,8,201,244,130,179,251,155,234,199,203,153,96,42,110,105,242,91,246,203,239,217,175,232,63,251,213,11,81,129,106,38,17,173,149,38,132,235,2,61,208,178,68,51,130,184,238,86,133,126,181,200,89,165,64,207,26,90,22,34,233,125,242,236,153,218,107,217,5,147,244,142,66,30,131,101,193,81,170,19,32,36,28,161,25,120,43,56,140,124,250,211,70,134,18,159,251,178,103,78,187,135,112,246,63,70,236,221,52,51,26,0,0 };
		}

		protected override void InitializeLocalizableStrings() {
			base.InitializeLocalizableStrings();
			SetLocalizableStringsDefInheritance();
			LocalizableStrings.Add(CreateNoRecepientErrorLocalizableString());
		}

		protected virtual SchemaLocalizableString CreateNoRecepientErrorLocalizableString() {
			SchemaLocalizableString localizableString = new SchemaLocalizableString() {
				UId = new Guid("375faf11-5ab9-484f-9233-56a6e1fa0ff3"),
				Name = "NoRecepientError",
				CreatedInPackageId = new Guid("a1a6f4c5-4ce0-49cf-afb2-f720b4b96f90"),
				CreatedInSchemaUId = new Guid("8b81a07e-f5a5-43a1-b7b8-6c4fdaced4b6"),
				ModifiedInSchemaUId = new Guid("8b81a07e-f5a5-43a1-b7b8-6c4fdaced4b6")
			};
			return localizableString;
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("8b81a07e-f5a5-43a1-b7b8-6c4fdaced4b6"));
		}

		#endregion

	}

	#endregion

}

