namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastHistoryMatcherSchema

	/// <exclude/>
	public class ForecastHistoryMatcherSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastHistoryMatcherSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastHistoryMatcherSchema(ForecastHistoryMatcherSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("2663de06-d978-7844-8986-9c48b9483ba2");
			Name = "ForecastHistoryMatcher";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,237,86,93,107,219,48,20,125,118,97,255,225,46,131,226,64,113,96,143,109,146,209,181,75,23,104,217,104,75,95,198,30,84,251,58,17,147,165,76,146,83,194,232,127,159,36,203,142,19,43,77,203,62,94,182,151,56,150,142,238,199,185,247,92,153,147,2,213,130,164,8,183,40,37,81,34,215,201,153,224,57,157,149,146,104,42,120,50,17,18,83,162,244,221,219,87,7,63,94,29,68,165,162,124,6,55,43,165,177,48,80,198,48,181,56,149,92,32,71,73,211,147,109,204,37,229,223,215,139,109,55,18,147,9,73,181,144,20,149,65,24,204,27,137,51,99,12,166,92,163,204,77,88,199,48,173,3,248,72,149,129,174,174,136,78,231,40,29,124,48,24,192,80,149,69,65,228,106,236,223,63,75,177,164,25,42,40,80,207,69,166,64,11,40,200,55,132,220,219,1,197,201,66,205,133,86,73,109,98,208,178,177,40,239,25,77,129,214,17,236,14,32,178,116,116,98,112,11,14,3,90,34,130,38,247,12,33,35,154,36,13,124,176,141,31,46,136,36,5,112,83,141,81,143,97,174,215,196,246,198,183,115,52,25,24,46,37,164,205,178,77,43,21,133,57,135,137,49,232,206,135,205,73,58,155,119,236,41,70,150,248,108,115,18,117,41,185,26,15,149,73,40,149,152,143,122,55,115,68,221,27,140,135,131,122,211,162,167,31,120,89,160,180,41,15,61,93,183,134,132,91,187,112,110,40,152,154,134,24,87,236,196,109,108,0,180,201,194,145,181,30,237,57,178,149,105,191,234,169,39,43,228,138,99,104,40,11,174,254,197,34,57,6,207,92,254,193,186,180,183,247,86,164,13,14,212,34,122,172,52,142,60,171,100,190,33,249,51,70,148,58,134,90,108,55,94,164,87,132,147,217,139,229,110,107,219,232,221,150,21,8,207,160,34,1,8,100,52,207,131,226,175,60,32,18,166,132,231,112,135,252,123,48,176,7,190,156,99,78,74,166,223,83,158,153,241,22,235,213,2,69,30,239,56,212,239,127,93,79,152,212,38,12,97,224,19,99,207,78,29,75,125,205,219,85,149,247,177,97,130,46,137,198,106,119,81,189,192,82,208,12,38,148,177,170,46,119,132,149,168,226,93,210,4,142,15,215,226,225,8,186,59,182,248,246,79,85,246,238,190,171,183,253,215,7,55,22,163,202,84,210,246,11,35,235,0,46,141,247,102,58,184,158,65,198,198,177,107,145,40,178,101,35,166,124,113,179,213,248,110,217,50,243,185,89,222,240,81,187,143,150,68,90,111,206,64,229,119,219,101,28,176,235,131,112,167,155,148,218,126,71,235,229,119,27,142,147,9,149,74,127,146,190,33,226,116,9,163,113,101,44,74,151,30,58,205,96,52,10,229,179,222,63,60,4,3,191,144,162,92,236,70,251,237,58,90,154,67,28,140,246,181,201,188,100,172,33,37,242,140,36,167,169,46,9,235,164,212,246,225,126,189,131,199,234,17,168,105,114,154,101,177,183,234,195,113,224,71,223,165,155,98,15,116,173,19,195,254,65,253,119,174,82,240,210,160,41,97,253,223,60,178,33,174,72,15,217,125,246,236,246,179,227,15,223,179,47,189,104,125,123,57,209,136,135,160,206,59,70,186,122,223,57,115,106,177,119,61,214,42,55,93,185,37,242,109,99,141,216,107,205,216,64,235,230,53,199,131,194,175,165,177,118,188,173,114,234,80,99,176,207,228,26,83,33,179,77,213,54,139,65,173,90,100,71,160,86,98,62,141,27,109,135,248,8,218,175,201,57,50,212,152,109,74,179,51,227,235,81,222,12,238,214,136,110,233,52,242,151,162,165,227,164,37,220,255,31,77,123,133,247,11,223,78,187,237,236,144,150,175,82,35,171,246,25,175,164,240,196,13,125,115,153,181,159,161,189,162,167,248,13,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("2663de06-d978-7844-8986-9c48b9483ba2"));
		}

		#endregion

	}

	#endregion

}

