namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ProcessInfoServiceSchema

	/// <exclude/>
	public class ProcessInfoServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ProcessInfoServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ProcessInfoServiceSchema(ProcessInfoServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("b6b00b4a-03a0-421e-819a-e3f6b7de89e5");
			Name = "ProcessInfoService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("ee75749b-5184-4f75-a3ec-dd2e096c705e");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,149,84,219,78,219,64,16,125,54,18,255,176,162,47,70,138,252,1,65,85,197,165,160,84,10,68,9,136,7,196,195,198,158,36,171,218,187,238,238,56,109,138,248,247,206,94,108,47,144,144,244,33,86,246,204,237,204,217,153,101,146,87,96,106,158,3,187,7,173,185,81,11,204,46,149,92,136,101,163,57,10,37,179,219,135,209,241,17,123,57,62,74,26,35,228,146,205,54,6,161,58,123,119,206,166,141,68,81,65,54,3,45,120,41,254,186,224,15,94,100,93,139,28,198,170,128,242,83,99,118,158,163,88,239,79,146,61,194,188,119,232,123,32,152,250,168,170,56,124,155,181,77,54,85,13,146,15,57,147,251,23,13,75,42,204,46,75,110,204,144,77,180,202,193,152,145,92,168,224,237,188,158,194,129,228,66,205,115,124,118,152,169,163,140,224,176,43,88,240,166,196,15,248,185,169,111,1,137,71,77,125,206,69,41,112,51,133,95,141,208,80,129,68,147,198,7,219,44,251,202,246,132,88,175,44,0,197,169,45,82,55,243,82,228,44,183,157,108,105,132,13,217,5,55,208,181,149,188,184,214,58,5,198,128,43,85,88,13,92,30,111,124,186,171,193,15,71,220,122,242,68,170,142,228,90,253,132,212,135,17,223,147,201,221,236,254,100,192,44,39,48,120,173,116,197,145,112,114,29,19,19,190,4,15,101,63,140,146,3,118,161,138,205,12,55,37,188,113,233,208,236,81,243,186,134,98,96,203,37,83,26,92,37,13,124,158,212,169,208,202,16,4,120,20,184,154,112,77,163,143,160,173,26,109,42,118,3,184,205,199,73,150,222,52,162,96,181,55,63,140,138,1,243,64,235,68,208,169,219,147,36,65,189,9,255,146,53,215,204,228,43,168,56,49,124,48,160,73,51,9,185,91,173,80,106,230,204,99,46,137,185,206,174,133,44,70,210,32,151,57,92,108,40,105,218,151,60,61,235,147,118,117,41,175,47,240,45,235,9,103,212,73,136,142,249,133,120,13,216,104,201,36,252,222,43,73,218,230,190,37,219,160,175,234,129,144,240,149,229,28,243,21,75,191,255,201,161,182,189,49,104,181,248,175,98,93,66,251,125,13,179,8,178,240,227,104,79,244,243,120,12,239,220,217,157,149,252,6,95,113,228,241,12,111,219,150,221,195,50,100,111,94,202,118,191,187,10,201,75,32,220,145,179,1,6,117,131,74,15,89,29,173,212,129,243,153,82,176,125,201,194,68,248,43,105,177,54,192,221,11,145,155,211,98,167,237,45,76,250,8,154,151,40,222,235,61,137,131,173,67,124,62,139,46,227,80,162,241,32,184,10,129,143,29,139,93,247,218,201,68,217,233,133,65,1,239,31,30,123,95,99,168,230,160,227,173,14,2,76,222,52,117,128,255,187,30,63,112,218,54,103,236,245,31,40,171,236,145,51,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("b6b00b4a-03a0-421e-819a-e3f6b7de89e5"));
		}

		#endregion

	}

	#endregion

}

