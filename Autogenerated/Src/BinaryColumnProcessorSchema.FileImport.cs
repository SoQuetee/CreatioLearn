namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: BinaryColumnProcessorSchema

	/// <exclude/>
	public class BinaryColumnProcessorSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public BinaryColumnProcessorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public BinaryColumnProcessorSchema(BinaryColumnProcessorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("49ef8817-52a2-4345-af44-3978c22e2ce8");
			Name = "BinaryColumnProcessor";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("1101e5cd-b945-4f88-8001-faccb4fdb24c");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,157,148,193,110,226,48,16,134,207,173,212,119,24,177,151,32,161,228,78,1,169,165,98,197,97,43,180,133,189,84,123,48,201,4,188,74,236,236,216,70,66,168,239,190,19,155,116,155,52,84,85,79,216,195,204,255,207,124,131,81,162,68,83,137,20,97,141,68,194,232,220,198,115,173,114,185,115,36,172,212,42,94,200,2,151,101,165,201,222,92,159,110,174,175,156,145,106,7,79,71,99,177,188,125,189,191,173,38,188,20,143,23,34,181,154,36,26,206,224,156,111,132,59,246,128,121,33,140,25,195,189,84,130,142,115,93,184,82,173,72,167,104,140,38,159,152,36,9,76,164,218,35,73,155,233,20,82,194,124,58,120,212,106,133,100,36,183,162,108,167,236,180,254,137,198,21,246,101,144,204,26,1,227,202,146,13,154,251,157,2,169,140,21,138,167,215,57,216,189,52,144,214,157,0,31,136,177,104,101,228,182,64,200,53,65,21,132,235,153,66,155,144,122,67,56,136,194,161,137,27,143,228,141,201,243,3,230,130,123,224,130,140,11,35,123,172,80,231,209,178,211,234,112,4,143,188,6,152,130,226,15,78,232,229,48,28,254,102,201,202,109,11,153,158,219,236,205,131,49,124,196,101,162,183,127,48,181,179,17,116,219,96,245,147,135,253,127,45,12,192,146,171,87,198,219,89,121,235,144,241,133,125,64,123,33,239,54,226,3,115,66,97,209,180,247,194,212,56,19,241,236,210,59,53,139,198,175,170,73,87,118,82,9,18,165,199,59,29,56,131,196,147,41,166,192,67,14,102,27,190,243,50,155,64,60,73,124,182,47,62,227,238,181,140,54,45,33,104,235,14,235,242,171,49,108,133,193,168,243,21,156,224,229,76,26,85,22,96,183,201,179,73,133,100,249,161,140,235,179,229,66,204,190,140,254,51,228,31,132,21,225,183,28,128,59,37,255,242,89,102,172,39,115,137,116,1,111,213,116,7,250,192,111,157,243,225,187,147,153,215,251,85,203,173,89,109,179,204,96,58,107,199,226,0,181,155,119,251,49,152,31,104,247,58,123,79,165,167,141,131,230,54,238,178,108,173,195,248,38,10,127,99,129,142,247,60,191,97,127,30,65,120,25,1,194,66,211,147,56,224,229,85,133,104,59,200,177,127,68,212,142,94,80,5,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("49ef8817-52a2-4345-af44-3978c22e2ce8"));
		}

		#endregion

	}

	#endregion

}

